{"version":3,"sources":["../node_modules/lodash.flowright/index.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Label.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../src/data/OperationData.ts","../../src/data/QueryData.ts","../../src/utils/useBaseQuery.ts","../../src/utils/useDeepMemo.ts","../../src/data/MutationData.ts","../../src/data/SubscriptionData.ts","../../src/ssr/RenderPromises.ts","../../src/Query.tsx","../../src/useQuery.ts","../../src/Mutation.tsx","../../src/useMutation.ts","../../src/Subscription.tsx","../../src/useSubscription.ts","../../src/hoc-utils.tsx","../../src/graphql.tsx","../../src/mutation-hoc.tsx","../../src/subscription-hoc.tsx","../../src/query-hoc.tsx","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Input.js"],"names":["freeGlobal","global","Object","freeSelf","self","root","Function","apply","func","thisArg","args","length","call","arrayPush","array","values","index","offset","objectProto","prototype","hasOwnProperty","objectToString","toString","Symbol","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","undefined","nativeMax","Math","max","isFlattenable","value","isArray","isObjectLike","isLength","tag","type","isObject","isFunction","isArrayLike","isArrayLikeObject","isArguments","Array","flowRight","fromRight","funcs","baseFlatten","depth","predicate","isStrict","result","reverse","TypeError","this","arguments","start","otherArgs","createFlow","module","exports","propTypes","children","PropTypes","node","inline","bool","tagPropType","innerRef","oneOfType","object","string","className","cssModule","Form","_Component","props","_this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","row","check","disabled","FormGroup","stringOrNumberProp","number","columnProps","shape","size","order","hidden","for","xs","sm","md","lg","xl","widths","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","_classNames","colSizeInterfix","push","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","options","context","isMounted","previousOptions","getOptions","setOptions","newOptions","storePrevious","isEqual","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","operation","forceUpdate","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","obs","getCurrentResult","afterExecute","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","observableQueryFields","currentResult","partial","errors","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","useBaseQuery","tick","updatedOptions","queryDataRef","current","queryData","memoFn","key","useDeepMemo","queryResult","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","mutationContext","ignoreResults","updateResult","isMostRecentMutation","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","queryPromises","Map","queryInfoTrie","observable","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","consumeAndAwaitPromises","promises","promise","clear","all","varMap","get","has","variablesString","JSON","stringify","info","useQuery","mutationDataRef","mutationData","subscriptionDataRef","useSubscription","isRequired","notifyOnNetworkStatusChange","returnPartialData","arrayOf","defaultMapPropsToOptions","defaultMapPropsToSkip","getDisplayName","WrappedComponent","name","calculateVariablesFromProps","variable","variableName","variableProp","kind","withRef","setWrappedInstance","getWrappedInstance","wrappedInstance","graphql","operationOptions","alias","mapPropsToOptions","graphQLDisplayName","GraphQL","opts","r","resultName","childProps","newResult","ownProps","withMutation","Subscription","lastResultProps","mapPropsToSkip","state","resubscribe","componentDidUpate","prevProps","setState","shouldSkip","create","withSubscription","withQuery","rowColsPropType","noGutters","form","Row","Col","_colClass","active","block","color","outline","onClick","close","Button","_React$Component","e","preventDefault","ariaLabel","btnOutlineColor","href","defaultAriaLabel","bsSize","valid","invalid","plaintext","addon","Input","focus","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce"],"mappings":"8HAAA,YAUA,IAWIA,EAA8B,iBAAVC,GAAsBA,GAAUA,EAAOC,SAAWA,QAAUD,EAGhFE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KAGxEC,EAAOL,GAAcG,GAAYG,SAAS,cAATA,GAYrC,SAASC,EAAMC,EAAMC,EAASC,GAC5B,OAAQA,EAAKC,QACX,KAAK,EAAG,OAAOH,EAAKI,KAAKH,GACzB,KAAK,EAAG,OAAOD,EAAKI,KAAKH,EAASC,EAAK,IACvC,KAAK,EAAG,OAAOF,EAAKI,KAAKH,EAASC,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAOF,EAAKI,KAAKH,EAASC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE3D,OAAOF,EAAKD,MAAME,EAASC,GAW7B,SAASG,EAAUC,EAAOC,GAKxB,IAJA,IAAIC,GAAS,EACTL,EAASI,EAAOJ,OAChBM,EAASH,EAAMH,SAEVK,EAAQL,GACfG,EAAMG,EAASD,GAASD,EAAOC,GAEjC,OAAOF,EAIT,IAAII,EAAchB,OAAOiB,UAGrBC,EAAiBF,EAAYE,eAO7BC,EAAiBH,EAAYI,SAG7BC,EAASlB,EAAKkB,OACdC,EAAuBN,EAAYM,qBACnCC,EAAmBF,EAASA,EAAOG,wBAAqBC,EAGxDC,EAAYC,KAAKC,IA0GrB,SAASC,EAAcC,GACrB,OAAOC,EAAQD,IAsBjB,SAAqBA,GAEnB,OAmFF,SAA2BA,GACzB,OAgHF,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,EAjHlBE,CAAaF,IA9BtB,SAAqBA,GACnB,OAAgB,MAATA,GAkFT,SAAkBA,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAxVb,iBAoQGG,CAASH,EAAMrB,UAiDzC,SAAoBqB,GAGlB,IAAII,EA4DN,SAAkBJ,GAChB,IAAIK,SAAcL,EAClB,QAASA,IAAkB,UAARK,GAA4B,YAARA,GA9D7BC,CAASN,GAASX,EAAeT,KAAKoB,GAAS,GACzD,MArTY,qBAqTLI,GApTI,8BAoTcA,EArD0BG,CAAWP,GA6BhCQ,CAAYR,GApFnCS,CAAkBT,IAAUZ,EAAeR,KAAKoB,EAAO,aAC1DR,EAAqBZ,KAAKoB,EAAO,WA3MzB,sBA2MsCX,EAAeT,KAAKoB,IAzB7CU,CAAYV,OAChCP,GAAoBO,GAASA,EAAMP,IAkD1C,IAAIQ,EAAUU,MAAMV,QAkMpB,IAAIW,EAxRJ,SAAoBC,GAClB,OA7BgBrC,EA6BA,SAASsC,GAGvB,IAAInC,GAFJmC,EA7DJ,SAASC,EAAYjC,EAAOkC,EAAOC,EAAWC,EAAUC,GACtD,IAAInC,GAAS,EACTL,EAASG,EAAMH,OAKnB,IAHAsC,IAAcA,EAAYlB,GAC1BoB,IAAWA,EAAS,MAEXnC,EAAQL,GAAQ,CACvB,IAAIqB,EAAQlB,EAAME,GACdgC,EAAQ,GAAKC,EAAUjB,GACrBgB,EAAQ,EAEVD,EAAYf,EAAOgB,EAAQ,EAAGC,EAAWC,EAAUC,GAEnDtC,EAAUsC,EAAQnB,GAEVkB,IACVC,EAAOA,EAAOxC,QAAUqB,GAG5B,OAAOmB,EAyCGJ,CAAYD,EAAO,IAERnC,OACfK,EAAQL,EAKZ,IAHIkC,GACFC,EAAMM,UAEDpC,KACL,GAA2B,mBAAhB8B,EAAM9B,GACf,MAAM,IAAIqC,UAjKI,uBAoKlB,OAAO,WAIL,IAHA,IAAIrC,EAAQ,EACRmC,EAASxC,EAASmC,EAAM9B,GAAOT,MAAM+C,KAAMC,WAAaA,UAAU,KAE7DvC,EAAQL,GACfwC,EAASL,EAAM9B,GAAOJ,KAAK0C,KAAMH,GAEnC,OAAOA,IAjDXK,EAAQ5B,OAAoBD,IAAV6B,EAAuBhD,EAAKG,OAAS,EAAK6C,EAAO,GAC5D,WAML,IALA,IAAI9C,EAAO6C,UACPvC,GAAS,EACTL,EAASiB,EAAUlB,EAAKC,OAAS6C,EAAO,GACxC1C,EAAQ6B,MAAMhC,KAETK,EAAQL,GACfG,EAAME,GAASN,EAAK8C,EAAQxC,GAE9BA,GAAS,EAET,IADA,IAAIyC,EAAYd,MAAMa,EAAQ,KACrBxC,EAAQwC,GACfC,EAAUzC,GAASN,EAAKM,GAG1B,OADAyC,EAAUD,GAAS1C,EACZP,EAAMC,EAAM8C,KAAMG,IAjB7B,IAAkBjD,EAAMgD,EAoTRE,EAAW,GAE3BC,EAAOC,QAAUhB,I,mDCzbjB,6FAQIiB,EAAY,CACdC,SAAUC,IAAUC,KACpBC,OAAQF,IAAUG,KAClB9B,IAAK+B,IACLC,SAAUL,IAAUM,UAAU,CAACN,IAAUO,OAAQP,IAAUvD,KAAMuD,IAAUQ,SAC3EC,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,QAMnBI,EAEJ,SAAUC,GAGR,SAASD,EAAKE,GACZ,IAAIC,EAKJ,OAHAA,EAAQF,EAAW/D,KAAK0C,KAAMsB,IAAUtB,MAClCwB,OAASD,EAAMC,OAAOC,KAAKC,YAAuBH,IACxDA,EAAMI,OAASJ,EAAMI,OAAOF,KAAKC,YAAuBH,IACjDA,EARTK,YAAeR,EAAMC,GAWrB,IAAIQ,EAAST,EAAKvD,UAgClB,OA9BAgE,EAAOL,OAAS,SAAgBM,GAC1B9B,KAAKsB,MAAMR,UACbd,KAAKsB,MAAMR,SAASgB,GAGtB9B,KAAK8B,IAAMA,GAGbD,EAAOF,OAAS,WACV3B,KAAK8B,KACP9B,KAAK8B,IAAIH,UAIbE,EAAOE,OAAS,WACd,IAAIC,EAAchC,KAAKsB,MACnBJ,EAAYc,EAAYd,UACxBC,EAAYa,EAAYb,UACxBR,EAASqB,EAAYrB,OACrBsB,EAAMD,EAAYlD,IAClBgC,EAAWkB,EAAYlB,SACvBoB,EAAaC,YAA8BH,EAAa,CAAC,YAAa,YAAa,SAAU,MAAO,aAEpGI,EAAUC,YAAgBC,IAAWpB,IAAWP,GAAS,eAAwBQ,GACrF,OAAOoB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDJ,IAAKhB,EACLI,UAAWkB,MAIRhB,EA5CT,CA6CEsB,aAEFtB,EAAKb,UAAYA,EACjBa,EAAKuB,aAtDc,CACjB7D,IAAK,QAsDQsC,O,iCCvEf,6EAMIb,EAAY,CACdC,SAAUC,IAAUC,KACpBkC,IAAKnC,IAAUG,KACfiC,MAAOpC,IAAUG,KACjBD,OAAQF,IAAUG,KAClBkC,SAAUrC,IAAUG,KACpB9B,IAAK+B,IACLK,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,QAMnB+B,EAAY,SAAmBzB,GACjC,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClByB,EAAMtB,EAAMsB,IACZE,EAAWxB,EAAMwB,SACjBD,EAAQvB,EAAMuB,MACdlC,EAASW,EAAMX,OACfsB,EAAMX,EAAMxC,IACZoD,EAAaC,YAA8Bb,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnHc,EAAUC,YAAgBC,IAAWpB,IAAW0B,GAAM,MAAeC,EAAQ,aAAe,gBAAcA,IAASlC,IAAS,uBAA6BkC,IAASC,IAAW,YAAqB3B,GAMtM,MAJY,aAARc,IACFC,EAAWY,SAAWA,GAGjBP,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDhB,UAAWkB,MAIfW,EAAUxC,UAAYA,EACtBwC,EAAUJ,aA1BS,CACjB7D,IAAK,OA0BQiE,O,iCC3Cf,6EAOIC,EAAqBvC,IAAUM,UAAU,CAACN,IAAUwC,OAAQxC,IAAUQ,SACtEiC,EAAczC,IAAUM,UAAU,CAACN,IAAUQ,OAAQR,IAAUwC,OAAQxC,IAAU0C,MAAM,CACzFC,KAAMJ,EACNK,MAAOL,EACPrF,OAAQqF,MAENzC,EAAY,CACdC,SAAUC,IAAUC,KACpB4C,OAAQ7C,IAAUG,KAClBiC,MAAOpC,IAAUG,KACjBwC,KAAM3C,IAAUQ,OAChBsC,IAAK9C,IAAUQ,OACfnC,IAAK+B,IACLK,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,OACrBwC,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJU,GAAIV,EACJW,OAAQpD,IAAUjD,OAEhBmF,EAAe,CACjB7D,IAAK,QACL+E,OAzBc,CAAC,KAAM,KAAM,KAAM,KAAM,OA4BrCC,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAQ,SAAe5C,GACzB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBmC,EAAShC,EAAMgC,OACfO,EAASvC,EAAMuC,OACf5B,EAAMX,EAAMxC,IACZ+D,EAAQvB,EAAMuB,MACdO,EAAO9B,EAAM8B,KACbe,EAAU7C,EAAMiC,IAChBrB,EAAaC,YAA8Bb,EAAO,CAAC,YAAa,YAAa,SAAU,SAAU,MAAO,QAAS,OAAQ,QAEzH8C,EAAa,GACjBP,EAAOQ,SAAQ,SAAUL,EAAUM,GACjC,IAAIC,EAAajD,EAAM0C,GAGvB,UAFO9B,EAAW8B,GAEbO,GAA6B,KAAfA,EAAnB,CAIA,IACIC,EADAT,GAAQO,EAGZ,GAAItF,YAASuF,GAAa,CACxB,IAAIE,EAEAC,EAAkBX,EAAO,IAAM,IAAMC,EAAW,IACpDQ,EAAWV,EAAmBC,EAAMC,EAAUO,EAAWnB,MACzDgB,EAAWO,KAAKtC,YAAgBC,MAAYmC,EAAc,IAAgBD,GAAYD,EAAWnB,MAA4B,KAApBmB,EAAWnB,KAAaqB,EAAY,QAAUC,EAAkBH,EAAWlB,OAASkB,EAAWlB,OAA8B,IAArBkB,EAAWlB,MAAaoB,EAAY,SAAWC,EAAkBH,EAAW5G,QAAU4G,EAAW5G,QAAgC,IAAtB4G,EAAW5G,OAAc8G,KAAgBtD,QAErWqD,EAAWV,EAAmBC,EAAMC,EAAUO,GAC9CH,EAAWO,KAAKH,OAGpB,IAAIpC,EAAUC,YAAgBC,IAAWpB,IAAWoC,GAAS,YAAmBT,GAAQ,qBAA4BO,GAAO,kBAAoBA,EAAcgB,IAAYA,EAAW/G,QAAS,kBAA2B8D,GACxN,OAAOoB,IAAMC,cAAcP,EAAKQ,YAAS,CACvC0B,QAASA,GACRjC,EAAY,CACbhB,UAAWkB,MAIf8B,EAAM3D,UAAYA,EAClB2D,EAAMvB,aAAeA,EACNuB,O,iCCxFA,SAASU,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfnI,OAAOoI,OAAOpI,OAAOqI,iBAAiBJ,EAAS,CACpDC,IAAK,CACHpG,MAAO9B,OAAOoI,OAAOF,OAP3B,mC,8ICaA,aAUE,WAAYI,EAAmCC,GATxC,KAAAC,WAAqB,EACrB,KAAAC,gBAA2C,GAG3C,KAAAF,QAA8B,GAG7B,KAAAD,QAAmC,GAGzClF,KAAKkF,QAAUA,GAAY,GAC3BlF,KAAKmF,QAAUA,GAAW,GA2D9B,OAxDS,YAAAG,WAAP,WACE,OAAOtF,KAAKkF,SAGP,YAAAK,WAAP,SACEC,EACAC,QAAA,IAAAA,OAAA,GAEIA,IAAkBC,YAAQ1F,KAAKkF,QAASM,KAC1CxF,KAAKqF,gBAAkBrF,KAAKkF,SAE9BlF,KAAKkF,QAAUM,GAOP,YAAAG,QAAV,WACE3F,KAAKoF,WAAY,GAGT,YAAAQ,cAAV,WACE,IAAMC,EACH7F,KAAKkF,SAAWlF,KAAKkF,QAAQW,QAC7B7F,KAAKmF,SAAWnF,KAAKmF,QAAQU,OAI9B,mBAKF,IAAIC,GAAQ,EAMZ,OALID,IAAW7F,KAAK6F,SAClBC,GAAQ,EACR9F,KAAK6F,OAASA,EACd7F,KAAK+F,WAEA,CACLF,OAAQ7F,KAAK6F,OACbC,MAAK,IAIC,YAAAE,mBAAV,SAA6BC,EAAwBlH,GACnD,IAAMmH,EAAY,YAAOD,GACK,YAAclH,GAClB,YAAcmH,EAAUnH,MAEtC,YACG,eAInB,EAvEA,GCaA,cAQE,WAAY,G,IACVmG,EAAA,EAAAA,QACAC,EAAA,EAAAA,QACAgB,EAAA,EAAAA,YAHF,EASE,YAAMjB,EAASC,IAAQ,K,OAhBjB,EAAAiB,aAAqD,GACrD,EAAAC,kBAA+D,GAG/D,EAAAC,SAAmB,EAyGnB,EAAAC,aAAe,SAACrB,GACtB,EAAKa,UAEL,EAAKO,SAAU,EACf,EAAKE,YAActB,EACnB,EAAKiB,eAGC,EAAAM,iBAAmB,WACzB,IAAM5G,EAAS,EAAK6G,iBAEpB,OADA,EAAKC,yBACE9G,GAoSD,EAAA+G,WAAa,SAACC,GACpB,SAAKR,kBAAkBS,MAAOC,QAAQF,IAEhC,EAAAG,aAAe,SACrBC,GAEG,SAAKZ,kBAAkBS,MAAOI,UAAUD,IAErC,EAAAE,eAAiB,SACvBC,GAIG,SAAKf,kBAAkBS,MAAOO,YAAYD,IAEvC,EAAAE,gBAAkB,SAACC,GACzB,EAAKlB,mBACH,EAAKA,kBAAkBS,OACvB,EAAKT,kBAAkBS,MAAOU,aAAaD,IAGvC,EAAAE,eAAiB,WACvB,EAAKpB,mBACH,EAAKA,kBAAkBS,OACvB,EAAKT,kBAAkBS,MAAOY,eAG1B,EAAAC,mBAAqB,SAI3BzC,GAKG,SAAKmB,kBAAkBS,MAAOc,gBAAgB1C,IA/ajD,EAAKiB,YAAcA,E,EA6bvB,OA/ckD,iBAqBzC,YAAA0B,QAAP,WACE7H,KAAK4F,gBAEC,wBAAEkC,EAAA,EAAAA,KAAMhB,EAAA,EAAAA,MAUd,OATIgB,GAAQhB,IAAU9G,KAAKoG,aAAaU,SACtC9G,KAAK+H,0BACL/H,KAAKoG,aAAaU,MAAQA,GAG5B9G,KAAKgI,wBAEDhI,KAAKoF,WAAWpF,KAAK2G,yBAElB3G,KAAKiI,uBAAyBjI,KAAKyG,oBAGrC,YAAAyB,YAAP,WACE,OAAQlI,KAAKsG,QAUT,CAACtG,KAAKuG,aAAcvG,KAAK6H,WATzB,CACE7H,KAAKuG,aACL,CACE4B,SAAS,EACTC,cAAe,IAAcC,MAC7BC,QAAQ,EACRC,UAAMlK,KAOT,YAAAmK,UAAP,WACE,IAAMtD,EAAUlF,KAAKsF,aACrB,GAAIJ,EAAQ4C,OAAwB,IAAhB5C,EAAQuD,IAAe,OAAO,EAGlD,IAAMC,EAAM1I,KAAKqG,kBAAkBS,MAEnC,QADsB4B,EAAIC,mBACLR,SAAUO,EAAI7I,UAG9B,YAAA+I,aAAP,SAAoB,GAApB,WAAsB,oBAAAC,YAAA,IAAO,GAAP,EAiBpB,OAhBA7I,KAAKoF,WAAY,EAEZyD,IAAQ7I,KAAKsG,UAChBtG,KAAK8I,yBAMLC,YAAW,WACT,EAAK1C,kBAAkBS,OACrB,EAAKT,kBAAkBS,MAAMkC,4BAInChJ,KAAKqF,gBAAkBrF,KAAKsF,aACrBtF,KAAK2F,QAAQlE,KAAKzB,OAGpB,YAAA+F,QAAP,WACE/F,KAAK+H,iCACE/H,KAAKqG,kBAAkBS,aACvB9G,KAAKoG,aAAavG,QAGpB,YAAAyF,WAAP,WACE,IAAMJ,EAAU,YAAMI,WAAU,WAkBhC,OAhBItF,KAAKwG,cACPtB,EAAQ2B,UAAS,2BACZ3B,EAAQ2B,WACR7G,KAAKwG,YAAYK,WAEtB3B,EAAQC,QAAO,2BACVD,EAAQC,SACRnF,KAAKwG,YAAYrB,UAKpBnF,KAAKsG,gBACApB,EAAQ4C,KAGV5C,GAiBD,YAAA+C,oBAAR,WACE,IAiBIpI,EAjBEoJ,EAAyBjJ,KAAKmF,SAAWnF,KAAKmF,QAAQ+D,eACtDC,GAAwC,IAA1BnJ,KAAKsF,aAAamD,IAChCW,EAAgBpJ,KAAK4F,gBAAgBC,OAAOwD,sBAE5CC,EAAa,CACjBnB,SAAS,EACTC,cAAe,IAAcD,QAC7BG,QAAQ,EACRC,UAAMlK,GAKR,OAAI8K,IAAgBF,GAA0BG,GACrCE,GAILL,IACFpJ,EACEG,KAAKmF,QAAQ+D,eAAgBK,gBAC3BvJ,KACAA,KAAKyG,mBACF6C,GAGFzJ,IAGD,YAAA2J,8BAAR,WACE,IAAMtE,EAAUlF,KAAKsF,aACrBtF,KAAKgG,mBAAmBd,EAAQ4B,MAAO,IAAa2C,OACpD,IAAMC,EAAcxE,EAAQwE,aAAe,QAa3C,OARE1J,KAAKmF,SACLnF,KAAKmF,QAAQ+D,iBACY,iBAAxBhE,EAAQyE,aACiB,sBAAxBzE,EAAQyE,eAEVzE,EAAQyE,YAAc,eAGxB,2BACKzE,GAAO,CACVwE,YAAW,EACXvE,QAASD,EAAQC,QACjByE,SAAU,CAAEC,eAAgB,CAAEH,YAAW,OAIrC,YAAAI,0BAAR,WAUE,GANI9J,KAAKmF,SAAWnF,KAAKmF,QAAQ+D,iBAC/BlJ,KAAKqG,kBAAkBS,MAAQ9G,KAAKmF,QAAQ+D,eAAea,iBACzD/J,KAAKsF,gBAIJtF,KAAKqG,kBAAkBS,MAAO,CACjC,IAAMkD,EAAyBhK,KAAKwJ,gCAEpCxJ,KAAKoG,aAAa4D,uBAAsB,2BACnCA,GAAsB,CACzBxJ,SAAU,OAEZR,KAAKqG,kBAAkBS,MAAQ9G,KAAK4F,gBAAgBC,OAAOoE,WAAU,eAChED,IAGDhK,KAAKmF,SAAWnF,KAAKmF,QAAQ+D,gBAC/BlJ,KAAKmF,QAAQ+D,eAAegB,sBAC1BlK,KAAKqG,kBAAkBS,MACvBkD,KAMA,YAAAhC,sBAAR,WAEE,GAAKhI,KAAKqG,kBAAkBS,MAA5B,CAKA,IAAMqD,EAA4B,OAAH,IAAG,CAAH,eAC1BnK,KAAKwJ,iCAA+B,CACvChJ,SAAU,OAITkF,YACCyE,EACAnK,KAAKoG,aAAa4D,0BAGpBhK,KAAKoG,aAAa4D,uBAAyBG,EAC3CnK,KAAKqG,kBACFS,MAAOvB,WAAW4E,GAKlBC,OAAM,qBAtBTpK,KAAK8J,6BA0BD,YAAAnD,uBAAR,sBACE,IAAI3G,KAAKqG,kBAAkBgE,eAAgBrK,KAAKsF,aAAawC,KAA7D,CAEA,IAAMwC,EAAWtK,KAAKqG,kBAAkBS,MACxC9G,KAAKqG,kBAAkBgE,aAAeC,EAASC,UAAU,CACvDC,KAAM,SAAC,G,IAAErC,EAAA,EAAAA,QAASC,EAAA,EAAAA,cAAeG,EAAA,EAAAA,KACzBkC,EAAiB,EAAKrE,aAAavG,OAIvC4K,GACAA,EAAetC,UAAYA,GAC3BsC,EAAerC,gBAAkBA,GACjC1C,YAAQ+E,EAAelC,KAAMA,IAK/B,EAAKpC,eAEPuE,MAAO,YAEL,GADA,EAAKC,sBACA,EAAM7M,eAAe,iBAAkB,MAAM,EAElD,IAAM2M,EAAiB,EAAKrE,aAAavG,QAEtC4K,GAAkBA,EAAetC,UACjCzC,YAAQ,EAAO,EAAKU,aAAasE,UAElC,EAAKtE,aAAasE,MAAQ,EAC1B,EAAKvE,oBAML,YAAAwE,mBAAR,WACE3K,KAAK+H,0BASL,IAAM6C,EAAY5K,KAAKqG,kBAAkBS,MAAO+D,eAC1CC,EAAa9K,KAAKqG,kBAAkBS,MAAOiE,gBACjD/K,KAAKqG,kBAAkBS,MAAOkE,mBAC9BhL,KAAK2G,yBACL/J,OAAOqO,OAAOjL,KAAKqG,kBAAkBS,MAAQ,CAC3C8D,UAAS,EACTE,WAAU,KAIN,YAAApE,eAAR,WACE,IAAI7G,EAAcG,KAAKkL,wBACjBhG,EAAUlF,KAAKsF,aAKrB,GAAIJ,EAAQ4C,KACVjI,EAAS,OAAH,IAAG,CAAH,eACDA,GAAM,CACT0I,UAAMlK,EACNqM,WAAOrM,EACP8J,SAAS,EACTG,QAAQ,QAEL,CAEL,IAAM6C,EAAgBnL,KAAKqG,kBAAkBS,MAAO6B,mBAC5CR,EAAA,EAAAA,QAASiD,EAAA,EAAAA,QAAShD,EAAA,EAAAA,cAAeiD,EAAA,EAAAA,OACnCX,EAAA,EAAAA,MAAOnC,EAAA,EAAAA,KAgBb,GAZI8C,GAAUA,EAAOhO,OAAS,IAC5BqN,EAAQ,IAAI,IAAY,CAAEY,cAAeD,KAG3CxL,EAAS,OAAH,IAAG,CAAH,eACDA,GAAM,CACTsI,QAAO,EACPC,cAAa,EACbsC,MAAK,EACLpC,QAAQ,IAGNH,EAAS,CACX,IAAM/B,EACJpG,KAAKoG,aAAavG,QAAUG,KAAKoG,aAAavG,OAAO0I,KACvD1I,EAAO0I,KACLnC,GAAgBmC,E,2BAEPnC,GACAmC,GAELnC,GAAgBmC,OACjB,GAAImC,EACT9N,OAAOqO,OAAOpL,EAAQ,CACpB0I,MAAOvI,KAAKqG,kBAAkBS,MAAOiE,iBAAoB,IACtDxC,WAEA,CACG,IAAAoB,EAAA,qCAAAA,YAER,GADQ,EAAA4B,iBAGLhD,GACD6C,GACgB,eAAhBzB,EAeA,OALA/M,OAAOqO,OAAOpL,EAAQ,CACpBsI,SAAS,EACTC,cAAe,IAAcD,UAE/BtI,EAAOkH,UACAlH,EAGTA,EAAO0I,KAAOA,GAQlB,OAJA1I,EAAOgG,OAAS7F,KAAK6F,OACrB7F,KAAKoG,aAAa+B,QACfnI,KAAKoG,aAAavG,QAAUG,KAAKoG,aAAavG,OAAOsI,UAAY,EACpEnI,KAAKoG,aAAavG,OAASA,EACpBA,GAGD,YAAAiJ,uBAAR,WACE,IAAMwB,EAAWtK,KAAKqG,kBAAkBS,MACxC,GAAKwD,EAAL,CAEM,2BAAE/B,EAAA,EAAAA,KAAMJ,EAAA,EAAAA,QAASuC,EAAA,EAAAA,MAEvB,IAAKvC,EAAS,CACN,wBAAErB,EAAA,EAAAA,MAAOD,EAAA,EAAAA,UAAW2E,EAAA,EAAAA,YAAaC,EAAA,EAAAA,QAGvC,GACEzL,KAAKqF,kBACJrF,KAAKoG,aAAa+B,SACnBzC,YAAQ1F,KAAKqF,gBAAgByB,MAAOA,IACpCpB,YAAQ1F,KAAKqF,gBAAgBwB,UAAWA,GAExC,OAGE2E,IAAgBd,EAClBc,EAAYjD,GACHkD,GAAWf,GACpBe,EAAQf,MAKN,YAAA3C,wBAAR,WACM/H,KAAKqG,kBAAkBgE,eACzBrK,KAAKqG,kBAAkBgE,aAAaqB,qBAC7B1L,KAAKqG,kBAAkBgE,eA0C1B,YAAAa,sBAAR,WAEE,MAAO,CACLrE,UAFiB7G,KAAKqG,kBAAkBS,MAElBD,UACtBE,QAAS/G,KAAK4G,WACdM,UAAWlH,KAAKgH,aAChBK,YAAarH,KAAKmH,eAClBK,aAAcxH,KAAKsH,gBACnBI,YAAa1H,KAAKyH,eAClBG,gBAAiB5H,KAAK2H,qBAG5B,EA/cA,CAAkD,G,SCdlCgE,EACd7E,EACA5B,EACA2D,QAAA,IAAAA,OAAA,GAEA,IAAM1D,EAAU,qBAAW,eACrB,oDAACyG,EAAA,KAAMzF,EAAA,KACP0F,EAAiB3G,EAAU,OAAH,IAAG,CAAH,eAAQA,GAAO,CAAE4B,MAAK,IAAK,CAAEA,MAAK,GAE1DgF,EAAe,mBAEhBA,EAAaC,UAChBD,EAAaC,QAAU,IAAI,EAA6B,CACtD7G,QAAS2G,EACT1G,QAAO,EACPgB,YAAW,KAIf,IAAM6F,EAAYF,EAAaC,QAC/BC,EAAUzG,WAAWsG,GACrBG,EAAU7G,QAAUA,EAKpB,IAMMtF,E,SCjCNoM,EACAC,GAEA,IAAMpK,EAAM,mBAMZ,OAJKA,EAAIiK,SAAYrG,YAAQwG,EAAKpK,EAAIiK,QAAQG,OAC5CpK,EAAIiK,QAAU,CAAEG,IAAG,EAAExN,MAAOuN,MAGvBnK,EAAIiK,QAAQrN,MDwBJyN,EACb,WAAM,OAACtD,EAAOmD,EAAU9D,cAAgB8D,EAAUnE,YAPvC,CACX3C,QAAS,OAAF,IAAE,CAAF,eAAO2G,GAAc,CAAEJ,aAASpN,EAAWmN,iBAAanN,IAC/D8G,QAAO,EACPyG,KAAI,IAQAQ,EAAcvD,EACfhJ,EAAyC,GACzCA,EAaL,OAXA,qBAAU,WAAM,OAAAmM,EAAUpD,aAAa,CAAEC,KAAI,MAAK,CAChDuD,EAAYjE,QACZiE,EAAYhE,cACZgE,EAAY1B,MACZ0B,EAAY7D,OAGd,qBAAU,WACR,OAAO,WAAM,OAAAyD,EAAUjG,aACtB,IAEIlG,EElDT,kBASE,WAAY,G,IACVqF,EAAA,EAAAA,QACAC,EAAA,EAAAA,QACAtF,EAAA,EAAAA,OACAwM,EAAA,EAAAA,UAJF,EAWE,YAAMnH,EAASC,IAAQ,K,OAuBjB,EAAAmH,YAAc,SACpBC,QAAA,IAAAA,MAGI,IAEJ,EAAKC,kBACL,IAAMC,EAAa,EAAKC,wBAExB,OAAO,EAAKC,OAAOJ,GAChBK,MAAK,SAACC,GAEL,OADA,EAAKC,oBAAoBD,EAAUJ,GAC5BI,KAERzC,OAAM,SAACM,GAEN,GADA,EAAKqC,gBAAgBrC,EAAO+B,IACvB,EAAKnH,aAAamG,QAAS,MAAMf,MAtC1C,EAAK1E,mBAAmBd,EAAQ8H,SAAU,IAAaC,UACvD,EAAKpN,OAASA,EACd,EAAKwM,UAAYA,EACjB,EAAKa,qBAAuB,E,EAiJhC,OAtKU,iBAwBD,YAAArF,QAAP,SAAehI,GAIb,OAHAG,KAAKoF,WAAY,EACjBpF,KAAKgG,mBAAmBhG,KAAKsF,aAAa0H,SAAU,IAAaC,UACjEpN,EAAOgG,OAAS7F,KAAK4F,gBAAgBC,OAC9B,CAAC7F,KAAKsM,YAAazM,IAGrB,YAAA+I,aAAP,WAEE,OADA5I,KAAKoF,WAAY,EACVpF,KAAK2F,QAAQlE,KAAKzB,OAGpB,YAAA+F,QAAP,aAwBQ,YAAA4G,OAAR,SACEJ,GAEM,wBACJS,EAAA,EAAAA,SACAnG,EAAA,EAAAA,UACAsG,EAAA,EAAAA,mBACAC,EAAA,EAAAA,OACA,IAAAjI,QAAA,kBACA,IAAAkI,2BAAA,IAAsB,GAAtB,EACA1D,EAAA,EAAAA,YAEI2D,EAAgB,OAAH,IAAG,CAAH,GAAQf,GAErBgB,EAAkB3Q,OAAOqO,OAC7B,GACApE,EACAyG,EAAczG,WAIhB,cAFOyG,EAAczG,UAEd7G,KAAK4F,gBAAgBC,OAAO8G,OAAM,aACvCK,SAAQ,EACRG,mBAAkB,EAClBK,eACEF,EAAcE,gBAAkBxN,KAAKsF,aAAakI,eACpDH,oBAAmB,EACnBD,OAAM,EACNjI,QAASsI,EACT9D,YAAW,EACX9C,UAAW0G,GACRD,KAIC,YAAAd,gBAAR,WACOxM,KAAKH,OAAOsI,SAAYnI,KAAKsF,aAAaoI,eAC7C1N,KAAK2N,aAAa,CAChBxF,SAAS,EACTuC,WAAOrM,EACPkK,UAAMlK,EACNiK,QAAQ,KAKN,YAAAwE,oBAAR,SACED,EACAJ,GAEM,wBAAEjB,EAAA,EAAAA,YAAakC,EAAA,EAAAA,cAEbnF,EAAA,EAAAA,KAAM8C,EAAA,EAAAA,OACRX,EACJW,GAAUA,EAAOhO,OAAS,EACtB,IAAI,IAAY,CAAEiO,cAAeD,SACjChN,EAKF2B,KAAK4N,qBAAqBnB,KAAgBiB,GAC5C1N,KAAK2N,aAAa,CAChBrF,QAAQ,EACRH,SAAS,EACTI,KAAI,EACJmC,MAAK,IAPPc,GAAcA,EAAYjD,IAatB,YAAAwE,gBAAR,SAAwBrC,EAAoB+B,GAClC,IAAAhB,EAAA,kBAAAA,QAEJzL,KAAK4N,qBAAqBnB,IAC5BzM,KAAK2N,aAAa,CAChBxF,SAAS,EACTuC,MAAK,EACLnC,UAAMlK,EACNiK,QAAQ,IAIRmD,GACFA,EAAQf,IAIJ,YAAAgC,sBAAR,WACE,QAAS1M,KAAKkN,sBAGR,YAAAU,qBAAR,SAA6BnB,GAC3B,OAAOzM,KAAKkN,uBAAyBT,GAG/B,YAAAkB,aAAR,SAAqB9N,IAEjBG,KAAKoF,WACHpF,KAAKyK,gBAAmB/E,YAAQ1F,KAAKyK,eAAgB5K,KAEvDG,KAAKqM,UAAUxM,GACfG,KAAKyK,eAAiB5K,IAG5B,EAzKA,CAGU,GCXV,kBAOE,WAAY,G,IACVqF,EAAA,EAAAA,QACAC,EAAA,EAAAA,QACAkH,EAAA,EAAAA,UAHF,EASE,YAAMnH,EAASC,IAAQ,K,OAXjB,EAAAkB,kBAAmD,GAYzD,EAAKgG,UAAYA,EACjB,EAAKwB,WAAW3I,G,EA0HpB,OAzIU,iBAkBD,YAAA2C,QAAP,SAAehI,GACb,IAA+B,IAA3BG,KAAKsF,aAAawC,KAEpB,OADA9H,KAAK+F,UACE,CACLoC,SAAS,EACTuC,WAAOrM,EACPkK,UAAMlK,EACNwI,UAAW7G,KAAKsF,aAAauB,WAIjC,IAAIsE,EAAgBtL,EAChBG,KAAK4F,gBAAgBE,QACvBqF,EAAgBnL,KAAK8N,oBAGjB,IAAAC,EAAA,kBAAAA,kBAqBN,MApBiC,oBAAtBA,IACTA,IAAsBA,EAAkB/N,KAAKsF,gBAIvB,IAAtByI,GACA/N,KAAKqF,iBACLzI,OAAOoR,KAAKhO,KAAKqF,iBAAiBhI,OAAS,IAC1C2C,KAAKqF,gBAAgBgF,eAAiBrK,KAAKsF,aAAa+E,eACtD3E,YAAQ1F,KAAKqF,gBAAgBwB,UAAW7G,KAAKsF,aAAauB,YAC3D7G,KAAKqF,gBAAgByC,OAAS9H,KAAKsF,aAAawC,QAElD9H,KAAK+F,UACLoF,EAAgBnL,KAAK8N,oBAGvB9N,KAAK6N,WAAW7N,KAAKsF,cACrBtF,KAAKiO,oBAELjO,KAAKqF,gBAAkBrF,KAAKsF,aAC5B,2BAAY6F,GAAa,CAAEtE,UAAW7G,KAAKsF,aAAauB,aAGnD,YAAA+B,aAAP,WACE5I,KAAKoF,WAAY,GAGZ,YAAAW,QAAP,WACE/F,KAAKkO,yBACElO,KAAKqG,kBAAkBS,OAGxB,YAAA+G,WAAR,SAAmB3I,GACblF,KAAKqG,kBAAkBS,QAAoC,IAA3B9G,KAAKsF,aAAawC,OACtD9H,KAAKqG,kBAAkBS,MAAQ9G,KAAK4F,gBAAgBC,OAAO0E,UAAU,CACnEzD,MAAO5B,EAAQmF,aACfxD,UAAW3B,EAAQ2B,UACnB8C,YAAazE,EAAQyE,gBAIjB,YAAAsE,kBAAR,WACMjO,KAAKqG,kBAAkBgE,eAC3BrK,KAAKqG,kBAAkBgE,aAAerK,KAAKqG,kBAAkBS,MAAOyD,UAClE,CACEC,KAAMxK,KAAKmO,kBAAkB1M,KAAKzB,MAClC0K,MAAO1K,KAAKoO,YAAY3M,KAAKzB,MAC7BqO,SAAUrO,KAAKsO,qBAAqB7M,KAAKzB,UAKvC,YAAA8N,iBAAR,WACE,MAAO,CACL3F,SAAS,EACTuC,WAAOrM,EACPkK,UAAMlK,IAIF,YAAAsP,aAAR,SAAqB9N,GACfG,KAAKoF,WACPpF,KAAKqM,UAAUxM,IAIX,YAAAsO,kBAAR,SAA0BtO,GAChB,IAAA0O,EAAA,kBAAAA,mBAERvO,KAAK2N,aAAa,CAChBpF,KAAM1I,EAAO0I,KACbJ,SAAS,EACTuC,WAAOrM,IAGLkQ,GACFA,EAAmB,CACjB1I,OAAQ7F,KAAK4F,gBAAgBC,OAC7B2I,iBAAkB3O,KAKhB,YAAAuO,YAAR,SAAoB1D,GAClB1K,KAAK2N,aAAa,CAChBjD,MAAK,EACLvC,SAAS,KAIL,YAAAmG,qBAAR,WACU,IAAAG,EAAA,kBAAAA,uBACJA,GAAwBA,IAC5BzO,KAAKkO,mBAGC,YAAAA,gBAAR,WACMlO,KAAKqG,kBAAkBgE,eACzBrK,KAAKqG,kBAAkBgE,aAAaqB,qBAC7B1L,KAAKqG,kBAAkBgE,eAGpC,EA5IA,CAGU,ICQV,wBAEU,KAAAqE,cAAgB,IAAIC,IAMpB,KAAAC,cAAgB,IAAID,IAGrB,YAAAzE,sBAAP,SACE2E,EACAvN,GAEAtB,KAAK8O,gBAAgBxN,GAAOuN,WAAaA,GAIpC,YAAA9E,iBAAP,SACEzI,GAEA,OAAOtB,KAAK8O,gBAAgBxN,GAAOuN,YAG9B,YAAAtF,gBAAP,SACEwF,EACAC,GAGA,OADahP,KAAK8O,gBAAgBC,EAAczJ,cACtC2J,KAWHD,KAVLhP,KAAK0O,cAAcQ,IACjBH,EAAczJ,aACd,IAAI6J,SAAQ,SAAAC,GACVA,EAAQL,EAAcvG,iBAKnB,OAKJ,YAAA6G,YAAP,WACE,OAAOrP,KAAK0O,cAActL,KAAO,GAG5B,YAAAkM,wBAAP,sBACQC,EAA2B,GAejC,OAdAvP,KAAK0O,cAAcrK,SAAQ,SAACmL,EAAST,GAUnC,EAAKD,gBAAgBC,GAAeE,MAAO,EAC3CM,EAAS5K,KAAK6K,MAEhBxP,KAAK0O,cAAce,QACZN,QAAQO,IAAIH,IAGb,YAAAT,gBAAR,SACExN,GAEQ,IAAAsN,EAAA,KAAAA,cACA9H,EAAA,EAAAA,MAAOD,EAAA,EAAAA,UACT8I,EAASf,EAAcgB,IAAI9I,IAAU,IAAI6H,IAC1CC,EAAciB,IAAI/I,IAAQ8H,EAAcM,IAAIpI,EAAO6I,GACxD,IAAMG,EAAkBC,KAAKC,UAAUnJ,GACjCoJ,EAAON,EAAOC,IAAIE,IAjFnB,CACLb,MAAM,EACNJ,WAAY,MAiFZ,OADKc,EAAOE,IAAIC,IAAkBH,EAAOT,IAAIY,EAAiBG,GACvDA,GA7EX,O,0BCXgB,EACd3O,GAEQ,IAAAd,EAAA,EAAAA,SACFX,E,SCHNiH,EACA5B,GAEA,OAAOyG,EAAgC7E,EAAO5B,GAAS,GDAxCgL,CADG,EAAApJ,MAAO,qCAEzB,OAAOtG,GAAYX,EAASW,EAASX,GAAU,K,SELjC,EACdyB,GAEM,M,SCDN0L,EACA9H,GAEA,IAAMC,EAAU,qBAAW,eACrB,6CAACtF,EAAA,KAAQwM,EAAA,KACTR,EAAiB3G,EAAU,OAAH,IAAG,CAAH,eAAQA,GAAO,CAAE8H,SAAQ,IAAK,CAAEA,SAAQ,GAEhEmD,EAAkB,mBAalBC,GAXCD,EAAgBpE,UACnBoE,EAAgBpE,QAAU,IAAI,EAAgC,CAC5D7G,QAAS2G,EACT1G,QAAO,EACPtF,OAAM,EACNwM,UAAS,KAGN8D,EAAgBpE,SASzB,OALAqE,EAAa7K,WAAWsG,GACxBuE,EAAajL,QAAUA,EAEvB,qBAAU,WAAM,OAAAiL,EAAaxH,kBAEtBwH,EAAavI,QAAQhI,GDzBtB,eAACyM,EAAA,KAAazM,EAAA,KACpB,OAAOyB,EAAMd,SAAWc,EAAMd,SAAS8L,EAAazM,GAAU,K,SEJhD,EACdyB,GAEA,IAAMzB,E,SCDNwK,EACAnF,GAEA,IAAMC,EAAU,qBAAW,eACrB0G,EAAiB3G,E,2BACdA,GAAO,CAAEmF,aAAY,IAC1B,CAAEA,aAAY,GACZ,sB,2CAACxK,EAAA,KAAQwM,EAAA,KAMTgE,EAAsB,mBAYtB7B,GAVC6B,EAAoBtE,UACvBsE,EAAoBtE,QAAU,IAAI,EAAoC,CACpE7G,QAAS2G,EACT1G,QAAO,EACPkH,UAAS,KAGNgE,EAAoBtE,SAU7B,OANAyC,EAAiBjJ,WAAWsG,GAAgB,GAC5C2C,EAAiBrJ,QAAUA,EAE3B,qBAAU,WAAM,OAAAqJ,EAAiB5F,kBACjC,qBAAU,WAAM,OAAA4F,EAAiBzI,QAAQtE,KAAK+M,KAAmB,IAE1DA,EAAiB3G,QAAQhI,GD/BjByQ,CAAgBhP,EAAM+I,aAAc/I,GACnD,OAAOA,EAAMd,UAAYX,EAASyB,EAAMd,SAASX,GAAU,MJI5C,MAAK,KACPU,UAAY,CACvBsF,OAAQ,IAAU7E,OAClBR,SAAU,IAAUtD,KAAKqT,WACzB5G,YAAa,IAAU1I,OACvBuP,4BAA6B,IAAU5P,KACvC4K,YAAa,IAAUtO,KACvBuO,QAAS,IAAUvO,KACnBqK,aAAc,IAAUtE,OACxB6D,MAAO,IAAU9F,OAAOuP,WACxB1J,UAAW,IAAU7F,OACrByH,IAAK,IAAU7H,KACf2K,eAAgB,IAAU3K,KAC1B6P,kBAAmB,IAAU7P,OEdhB,MAAQ,KACVL,UAAY,CACvByM,SAAU,IAAUhM,OAAOuP,WAC3B1J,UAAW,IAAU7F,OACrBmM,mBAAoB,IAAUpM,UAAU,CAAC,IAAUC,OAAQ,IAAU9D,OACrEsQ,eAAgB,IAAUzM,UAAU,CAClC,IAAU2P,QACR,IAAU3P,UAAU,CAAC,IAAUE,OAAQ,IAAUD,UAEnD,IAAU9D,OAEZmQ,oBAAqB,IAAUzM,KAC/BwM,OAAQ,IAAUlQ,KAClBsD,SAAU,IAAUtD,KAAKqT,WACzB/E,YAAa,IAAUtO,KACvBuO,QAAS,IAAUvO,KACnByM,YAAa,IAAU1I,SEhBV,MAAY,KACdV,UAAY,CACvB8J,aAAc,IAAUrJ,OAAOuP,WAC/B1J,UAAW,IAAU7F,OACrBR,SAAU,IAAUtD,KACpBqR,mBAAoB,IAAUrR,KAC9BuR,uBAAwB,IAAUvR,KAClC6Q,kBAAmB,IAAUhN,UAAU,CAAC,IAAU7D,KAAM,IAAU0D,QEhB/D,IAAM+P,EAA2B,WAAM,MAAC,IAElCC,EAAwB,WAAM,UAE3C,SAAgBC,EAAkBC,GAChC,OAAOA,EAAiBpH,aAAeoH,EAAiBC,MAAQ,YAGlE,SAAgBC,EACd9K,EACA5E,GAGA,IADA,IAAIuF,EAAgC,GACL,MAAAX,EAAUW,UAAV,eAAqB,CAA3C,WAAEoK,EAAA,EAAAA,SAAUlS,EAAA,EAAAA,KACnB,GAAKkS,EAASF,MAASE,EAASF,KAAKrS,MAArC,CAEA,IAAMwS,EAAeD,EAASF,KAAKrS,MAC7ByS,EAAgB7P,EAAc4P,GAER,qBAAjBC,EAMO,gBAAdpS,EAAKqS,OACPvK,EAAUqK,QAAgB7S,GAN1BwI,EAAUqK,GAAgBC,GAS9B,OAAOtK,EAQT,kBASE,WAAYvF,GAAZ,MACE,YAAMA,IAAM,K,OALP,EAAA+P,SAAmB,EAMxB,EAAKC,mBAAqB,EAAKA,mBAAmB7P,KAAK,G,EAgB3D,OAvBY,iBAUV,YAAA8P,mBAAA,WAOE,OANA,4BAMOvR,KAAKwR,iBAGd,YAAAF,mBAAA,SAAmBxP,GACjB9B,KAAKwR,gBAAkB1P,GAE3B,EA3BA,CAIY,IAAMY,W,SCrCF+O,EAOdxL,EACAyL,GAOA,YAPA,IAAAA,MAAA,IAOQ,YAAOzL,GAAUlH,MACvB,KAAK,IAAakO,SAChB,O,SCAJhH,EACAyL,QAAA,IAAAA,MAAA,IAQA,IAAMxL,EAAY,YAAOD,GAIvB,IAAAf,eAAA,UACA,IAAAyM,aAAA,IAAQ,EAAR,WAGEC,EAAoB1M,EAIxB,MAHiC,oBAAtB0M,IACTA,EAAoB,WAAM,OAAA1M,IAErB,SACL4L,GAEA,IAAMe,EAAwBF,EAAK,IAAId,EAAeC,GAAiB,IACvE,2B,+CAsDA,OAtDsB,YAAAgB,EAAA,GAGpB,YAAA/P,OAAA,WACE,IAAIT,EAAQtB,KAAKsB,MACXyQ,EAAOH,EAAkBtQ,GAY/B,OAVIoQ,EAAiBL,UACnBrR,KAAKqR,SAAU,EACf/P,EAAQ1E,OAAOqO,OAAO,GAAI3J,EAAO,CAC/BQ,IAAK9B,KAAKsR,uBAGTS,EAAKlL,WAAaX,EAAUW,UAAUxJ,OAAS,IAClD0U,EAAKlL,UAAYmK,EAA4B9K,EAAW5E,IAIxD,kBAAC,EAAQ,aAACoM,eAAa,GAAKqE,EAAI,CAAE/E,SAAU/G,KACzC,SACC0G,EACA,G,QAAEpE,EAAA,EAAAA,KAAM,0BAMF1I,EAASjD,OAAOqO,OAAO+G,EAAGzJ,GAAQ,IAClCwI,EAAOW,EAAiBX,MAAQ,SAChCkB,EAAaP,EAAiBX,KAC7BA,EAAI,SACP,SACAmB,IAAc,MACfnB,GAAOpE,EACR,EAACsF,GAAapS,EACQ,GACxB,GAAI6R,EAAiBpQ,MAAO,CAC1B,IAAM6Q,IAAS,MAKZpB,GAAOpE,EACR,EAACsF,GAAapS,EACd,EAAAuS,SAAU9Q,EACX,GACD4Q,EAAaR,EAAiBpQ,MAAM6Q,GAGtC,OAAO,kBAACrB,EAAgB,eAAKxP,EAAW4Q,QAhDzC,EAAAxI,YAAcmI,EACd,EAAAf,iBAAmBA,EAoD5B,EAtDA,CAAsB,GAyDtB,OAAO,IAAqBgB,EAAShB,EAAkB,KDlF9CuB,CAAapM,EAAUyL,GAChC,KAAK,IAAaY,aAChB,O,SENJrM,EACAyL,QAAA,IAAAA,MAAA,IAQA,IAAMxL,EAAY,YAAOD,GAGvB,IAAAf,eAAA,UACA,IAAA4C,YAAA,IAAO,EAAP,IACA,IAAA6J,aAAA,IAAQ,EAAR,WACA5D,EAAA,EAAAA,kBAGE6D,EAAoB1M,EACS,oBAAtB0M,IACTA,EAAoB,WAAM,OAAA1M,IAE5B,IAIIqN,EAJAC,EAAiB1K,EAKrB,MAJ8B,oBAAnB0K,IAA+BA,EAAiB,WAAM,OAAA1K,IAI1D,SACLgJ,GAEA,IAAMe,EAAwBF,EAAK,IAAId,EAAeC,GAAiB,IACvE,cAOE,WAAYxP,GAAZ,MACE,YAAMA,IAAM,K,OACZ,EAAKmR,MAAQ,CAAEC,aAAa,G,EA8EhC,OAvFsB,YAAAZ,EAAA,GAYpB,YAAAa,kBAAA,SAAkBC,GACZ7E,GACF/N,KAAK6S,SAAS,CACZH,YAAa3E,EAAkB6E,EAAW5S,KAAKsB,UAKrD,YAAAS,OAAA,sBACMT,EAAQtB,KAAKsB,MACXwR,EAAaN,EAAelR,GAC5ByQ,EAAOe,EACTlW,OAAOmW,OAAO,MACdnB,EAAkBtQ,GAKtB,OAHKwR,IAAef,EAAKlL,WAAaX,EAAUW,UAAUxJ,OAAS,IACjE0U,EAAKlL,UAAYmK,EAA4B9K,EAAW5E,IAGxD,kBAAC,EAAY,eACPyQ,EAAI,CACRrI,YAAamI,EACb/J,KAAMgL,EACNzI,aAAcpE,EACd8H,kBAAmB/N,KAAKyS,MAAMC,eAE7B,SAAC,G,QAAEnK,EAAA,EAAAA,KAAM,0BAQR,GAPImJ,EAAiBL,UACnB,EAAKA,SAAU,EACf/P,EAAQ1E,OAAOqO,OAAO,GAAI3J,EAAO,CAC/BQ,IAAK,EAAKwP,sBAIVwB,EACF,OACE,kBAAChC,EAAgB,eACXxP,EACA,KAQV,IAAMzB,EAASjD,OAAOqO,OAAO+G,EAAGzJ,GAAQ,IAClCwI,EAAOW,EAAiBX,MAAQ,OAClCmB,IAAU,MAAMnB,GAAOlR,EAAM,GACjC,GAAI6R,EAAiBpQ,MAAO,CAC1B,IAAM6Q,IAAS,MAKZpB,GAAOlR,EACR,EAAAuS,SAAU9Q,EACX,GAKD4Q,EAJAK,EAAkBb,EAAiBpQ,MACjC6Q,EACAI,GAKJ,OACE,kBAACzB,EAAgB,eACXxP,EACA4Q,QA3ET,EAAAxI,YAAcmI,EACd,EAAAf,iBAAmBA,EAiF5B,EAvFA,CAAsB,GA0FtB,OAAO,IAAqBgB,EAAShB,EAAkB,KFnH9CkC,CAAiB/M,EAAUyL,GACpC,KAAK,IAAajI,MAClB,QACE,O,SGTJxD,EACAyL,QAAA,IAAAA,MAAA,IAQA,IAAMxL,EAAY,YAAOD,GAGvB,IAAAf,eAAA,UACA,IAAA4C,YAAA,IAAO,EAAP,IACA,IAAA6J,aAAA,IAAQ,EAAR,WAGEC,EAAoB1M,EACS,oBAAtB0M,IACTA,EAAoB,WAAM,OAAA1M,IAG5B,IAMIqN,EANAC,EAAiB1K,EAOrB,MAN8B,oBAAnB0K,IACTA,EAAiB,WAAM,OAAA1K,IAKlB,SACLgJ,GAEA,IAAMe,EAAwBF,EAAK,IAAId,EAAeC,GAAiB,IACvE,2B,+CAwEA,OAxEsB,YAAAgB,EAAA,GAIpB,YAAA/P,OAAA,sBACMT,EAAQtB,KAAKsB,MACXwR,EAAaN,EAAelR,GAC5ByQ,EAAOe,EACTlW,OAAOmW,OAAO,M,eACTnB,EAAkBtQ,IAM3B,OAJKwR,IAAef,EAAKlL,WAAaX,EAAUW,UAAUxJ,OAAS,IACjE0U,EAAKlL,UAAYmK,EAA4B9K,EAAW5E,IAIxD,kBAAC,EAAK,eACAyQ,EAAI,CACRrI,YAAamI,EACb/J,KAAMgL,EACNhM,MAAOb,KAEN,SAAC,GAAE,EAAAJ,O,QAAW0C,EAAA,EAAAA,KAAM,mCASnB,GARImJ,EAAiBL,UACnB,EAAKA,SAAU,EACf/P,EAAQ1E,OAAOqO,OAAO,GAAI3J,EAAO,CAC/BQ,IAAK,EAAKwP,sBAKVwB,EACF,OACE,kBAAChC,EAAgB,eACXxP,EACA,KAQV,IAAMzB,EAASjD,OAAOqO,OAAO+G,EAAGzJ,GAAQ,IAClCwI,EAAOW,EAAiBX,MAAQ,OAClCmB,IAAU,MAAMnB,GAAOlR,EAAM,GACjC,GAAI6R,EAAiBpQ,MAAO,CAC1B,IAAM6Q,IAAS,MAKZpB,GAAOlR,EACR,EAAAuS,SAAU9Q,EACX,GAKD4Q,EAJAK,EAAkBb,EAAiBpQ,MACjC6Q,EACAI,GAKJ,OACE,kBAACzB,EAAgB,eACXxP,EACA4Q,QAhET,EAAAxI,YAAcmI,EACd,EAAAf,iBAAmBA,EAsE5B,EAxEA,CAAsB,GA2EtB,OAAO,IAAqBgB,EAAShB,EAAkB,KHnG9CmC,CAAUhN,EAAUyL,M,gCI9BjC,6EAOIwB,EAAkBzS,IAAUM,UAAU,CAACN,IAAUwC,OAAQxC,IAAUQ,SACnEV,EAAY,CACdzB,IAAK+B,IACLsS,UAAW1S,IAAUG,KACrBM,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,OACrBoS,KAAM3S,IAAUG,KAChB4C,GAAI0P,EACJzP,GAAIyP,EACJxP,GAAIwP,EACJvP,GAAIuP,EACJtP,GAAIsP,GAEFvQ,EAAe,CACjB7D,IAAK,MACL+E,OAhBiB,CAAC,KAAM,KAAM,KAAM,KAAM,OAmBxCwP,EAAM,SAAa/R,GACrB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBgS,EAAY7R,EAAM6R,UAClBlR,EAAMX,EAAMxC,IACZsU,EAAO9R,EAAM8R,KACbvP,EAASvC,EAAMuC,OACf3B,EAAaC,YAA8Bb,EAAO,CAAC,YAAa,YAAa,YAAa,MAAO,OAAQ,WAEzG8C,EAAa,GACjBP,EAAOQ,SAAQ,SAAUL,EAAUM,GACjC,IAAIL,EAAU3C,EAAM0C,GAGpB,UAFO9B,EAAW8B,GAEbC,EAAL,CAIA,IAAIF,GAAQO,EACZF,EAAWO,KAAKZ,EAAO,YAAcE,EAAU,YAAcD,EAAW,IAAMC,OAEhF,IAAI7B,EAAUC,YAAgBC,IAAWpB,EAAWiS,EAAY,aAAe,KAAMC,EAAO,WAAa,MAAOhP,GAAajD,GAC7H,OAAOoB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDhB,UAAWkB,MAIfiR,EAAI9S,UAAYA,EAChB8S,EAAI1Q,aAAeA,EACJ0Q,O,gCCtDf,6EAOIrQ,EAAqBvC,IAAUM,UAAU,CAACN,IAAUwC,OAAQxC,IAAUQ,SACtEiC,EAAczC,IAAUM,UAAU,CAACN,IAAUG,KAAMH,IAAUwC,OAAQxC,IAAUQ,OAAQR,IAAU0C,MAAM,CACzGC,KAAM3C,IAAUM,UAAU,CAACN,IAAUG,KAAMH,IAAUwC,OAAQxC,IAAUQ,SACvEoC,MAAOL,EACPrF,OAAQqF,MAENzC,EAAY,CACdzB,IAAK+B,IACL2C,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJU,GAAIV,EACJhC,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,OACrB6C,OAAQpD,IAAUjD,OAEhBmF,EAAe,CACjB7D,IAAK,MACL+E,OApBc,CAAC,KAAM,KAAM,KAAM,KAAM,OAuBrCC,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDqP,EAAM,SAAahS,GACrB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClB0C,EAASvC,EAAMuC,OACf5B,EAAMX,EAAMxC,IACZoD,EAAaC,YAA8Bb,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvF8C,EAAa,GACjBP,EAAOQ,SAAQ,SAAUL,EAAUM,GACjC,IAAIC,EAAajD,EAAM0C,GAGvB,UAFO9B,EAAW8B,GAEbO,GAA6B,KAAfA,EAAnB,CAIA,IAAIR,GAAQO,EAEZ,GAAItF,YAASuF,GAAa,CACxB,IAAIE,EAEAC,EAAkBX,EAAO,IAAM,IAAMC,EAAW,IAChDQ,EAAWV,EAAmBC,EAAMC,EAAUO,EAAWnB,MAC7DgB,EAAWO,KAAKtC,YAAgBC,MAAYmC,EAAc,IAAgBD,GAAYD,EAAWnB,MAA4B,KAApBmB,EAAWnB,KAAaqB,EAAY,QAAUC,EAAkBH,EAAWlB,OAASkB,EAAWlB,OAA8B,IAArBkB,EAAWlB,MAAaoB,EAAY,SAAWC,EAAkBH,EAAW5G,QAAU4G,EAAW5G,QAAgC,IAAtB4G,EAAW5G,OAAc8G,IAAetD,QAC/V,CACL,IAAIoS,EAAYzP,EAAmBC,EAAMC,EAAUO,GAEnDH,EAAWO,KAAK4O,QAIfnP,EAAW/G,QACd+G,EAAWO,KAAK,OAGlB,IAAIvC,EAAUC,YAAgBC,IAAWpB,EAAWkD,GAAajD,GACjE,OAAOoB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDhB,UAAWkB,MAIfkR,EAAI/S,UAAYA,EAChB+S,EAAI3Q,aAAeA,EACJ2Q,O,gCClFf,6FAQI/S,EAAY,CACdiT,OAAQ/S,IAAUG,KAClB,aAAcH,IAAUQ,OACxBwS,MAAOhT,IAAUG,KACjB8S,MAAOjT,IAAUQ,OACjB6B,SAAUrC,IAAUG,KACpB+S,QAASlT,IAAUG,KACnB9B,IAAK+B,IACLC,SAAUL,IAAUM,UAAU,CAACN,IAAUO,OAAQP,IAAUvD,KAAMuD,IAAUQ,SAC3E2S,QAASnT,IAAUvD,KACnBkG,KAAM3C,IAAUQ,OAChBT,SAAUC,IAAUC,KACpBQ,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,OACrB6S,MAAOpT,IAAUG,MAOfkT,EAEJ,SAAUC,GAGR,SAASD,EAAOxS,GACd,IAAIC,EAIJ,OAFAA,EAAQwS,EAAiBzW,KAAK0C,KAAMsB,IAAUtB,MACxC4T,QAAUrS,EAAMqS,QAAQnS,KAAKC,YAAuBH,IACnDA,EAPTK,YAAekS,EAAQC,GAUvB,IAAIlS,EAASiS,EAAOjW,UAyDpB,OAvDAgE,EAAO+R,QAAU,SAAiBI,GAC5BhU,KAAKsB,MAAMwB,SACbkR,EAAEC,iBAIAjU,KAAKsB,MAAMsS,SACb5T,KAAKsB,MAAMsS,QAAQI,IAIvBnS,EAAOE,OAAS,WACd,IAAIC,EAAchC,KAAKsB,MACnBkS,EAASxR,EAAYwR,OACrBU,EAAYlS,EAAY,cACxByR,EAAQzR,EAAYyR,MACpBvS,EAAYc,EAAYd,UACxB2S,EAAQ7R,EAAY6R,MACpB1S,EAAYa,EAAYb,UACxBuS,EAAQ1R,EAAY0R,MACpBC,EAAU3R,EAAY2R,QACtBvQ,EAAOpB,EAAYoB,KACnBnB,EAAMD,EAAYlD,IAClBgC,EAAWkB,EAAYlB,SACvBoB,EAAaC,YAA8BH,EAAa,CAAC,SAAU,aAAc,QAAS,YAAa,QAAS,YAAa,QAAS,UAAW,OAAQ,MAAO,aAEhK6R,GAAwC,qBAAxB3R,EAAW1B,WAC7B0B,EAAW1B,SAAW+B,IAAMC,cAAc,OAAQ,CAChD,eAAe,GACd,SAGL,IAAI2R,EAAkB,OAASR,EAAU,WAAa,IAAM,IAAMD,EAC9DtR,EAAUC,YAAgBC,IAAWpB,EAAW,CAClD2S,MAAOA,GACNA,GAAS,MAAOA,GAASM,IAAiB/Q,GAAO,OAASA,IAAcqQ,GAAQ,YAAqB,CACtGD,OAAQA,EACR1Q,SAAU9C,KAAKsB,MAAMwB,WACnB3B,GAEAe,EAAWkS,MAAgB,WAARnS,IACrBA,EAAM,KAGR,IAAIoS,EAAmBR,EAAQ,QAAU,KACzC,OAAOtR,IAAMC,cAAcP,EAAKQ,YAAS,CACvC1D,KAAc,WAARkD,GAAoBC,EAAW0R,QAAU,cAAWvV,GACzD6D,EAAY,CACbhB,UAAWkB,EACXN,IAAKhB,EACL8S,QAAS5T,KAAK4T,QACd,aAAcM,GAAaG,MAIxBP,EApET,CAqEEvR,IAAMG,WAERoR,EAAOvT,UAAYA,EACnBuT,EAAOnR,aA/EY,CACjB+Q,MAAO,YACP5U,IAAK,UA8EQgV,O,gCCxGf,6FAUIvT,EAAY,CACdC,SAAUC,IAAUC,KACpB3B,KAAM0B,IAAUQ,OAChBmC,KAAM3C,IAAUQ,OAChBqT,OAAQ7T,IAAUQ,OAClBsT,MAAO9T,IAAUG,KACjB4T,QAAS/T,IAAUG,KACnB9B,IAAK+B,IACLC,SAAUL,IAAUM,UAAU,CAACN,IAAUO,OAAQP,IAAUvD,KAAMuD,IAAUQ,SAC3EwT,UAAWhU,IAAUG,KACrB8T,MAAOjU,IAAUG,KACjBM,UAAWT,IAAUQ,OACrBE,UAAWV,IAAUO,QAMnB2T,EAEJ,SAAUZ,GAGR,SAASY,EAAMrT,GACb,IAAIC,EAKJ,OAHAA,EAAQwS,EAAiBzW,KAAK0C,KAAMsB,IAAUtB,MACxCwB,OAASD,EAAMC,OAAOC,KAAKC,YAAuBH,IACxDA,EAAMqT,MAAQrT,EAAMqT,MAAMnT,KAAKC,YAAuBH,IAC/CA,EARTK,YAAe+S,EAAOZ,GAWtB,IAAIlS,EAAS8S,EAAM9W,UA0EnB,OAxEAgE,EAAOL,OAAS,SAAgBM,GAC1B9B,KAAKsB,MAAMR,UACbd,KAAKsB,MAAMR,SAASgB,GAGtB9B,KAAK8B,IAAMA,GAGbD,EAAO+S,MAAQ,WACT5U,KAAK8B,KACP9B,KAAK8B,IAAI8S,SAIb/S,EAAOE,OAAS,WACd,IAAIC,EAAchC,KAAKsB,MACnBJ,EAAYc,EAAYd,UACxBC,EAAYa,EAAYb,UACxBpC,EAAOiD,EAAYjD,KACnBuV,EAAStS,EAAYsS,OACrBC,EAAQvS,EAAYuS,MACpBC,EAAUxS,EAAYwS,QACtB1V,EAAMkD,EAAYlD,IAClB4V,EAAQ1S,EAAY0S,MACpBD,EAAYzS,EAAYyS,UACxB3T,EAAWkB,EAAYlB,SACvBoB,EAAaC,YAA8BH,EAAa,CAAC,YAAa,YAAa,OAAQ,SAAU,QAAS,UAAW,MAAO,QAAS,YAAa,aAEtJ6S,EAAa,CAAC,QAAS,YAAYC,QAAQ/V,IAAS,EACpDgW,EAAe,IAAIC,OAAO,MAAO,KAIjC/S,EAAMnD,IADiB,WAATC,GADW,aAATA,EAE6BA,EAAO,SACpDkW,EAAmB,eAEnBR,GACFQ,GAAsC,aACtChT,EAAMnD,GAAO,SARU,SAATC,EAUdkW,GAAsC,QAC7BJ,IAEPI,EADEP,EACiB,KAEA,oBAInBxS,EAAWkB,MAAQ2R,EAAaG,KAAKhT,EAAWkB,QAClD+R,YAAS,oFACTb,EAASpS,EAAWkB,YACblB,EAAWkB,MAGpB,IAAIhB,EAAUC,YAAgBC,IAAWpB,EAAWsT,GAAW,aAAcD,GAAS,aAAYD,GAAS,gBAAkBA,EAAgBW,GAAmB9T,GAWhK,OATY,UAARc,GAAmBnD,GAAsB,oBAARA,KACnCoD,EAAWnD,KAAOA,GAGhBmD,EAAW1B,WAAciU,GAAsB,WAAT1V,GAAoC,kBAARkD,GAA4B,WAARA,IACxFkT,YAAS,yBAA4BpW,EAAO,6EACrCmD,EAAW1B,UAGb+B,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDJ,IAAKhB,EACLI,UAAWkB,MAIRuS,EAtFT,CAuFEpS,IAAMG,WAERiS,EAAMpU,UAAYA,EAClBoU,EAAMhS,aAhGa,CACjB5D,KAAM,QAgGO4V","file":"static/js/2.f09e856c.chunk.js","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return baseRest(function(funcs) {\n    funcs = baseFlatten(funcs, 1);\n\n    var length = funcs.length,\n        index = length;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      if (typeof funcs[index] != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n    }\n    return function() {\n      var index = 0,\n          result = length ? funcs[index].apply(this, arguments) : arguments[0];\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * This method is like `_.flow` except that it creates a function that\n * invokes the given functions from right to left.\n *\n * @static\n * @since 3.0.0\n * @memberOf _\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flow\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flowRight([square, _.add]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flowRight = createFlow(true);\n\nmodule.exports = flowRight;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { ApolloClient } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport {\n  ApolloContextValue,\n  parser,\n  DocumentType,\n  operationName\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { CommonOptions } from '../types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: ApolloContextValue = {};\n  public client: ApolloClient<object> | undefined;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !isEqual(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import {\n  ApolloQueryResult,\n  ApolloError,\n  NetworkStatus,\n  FetchMoreOptions,\n  FetchMoreQueryOptions,\n  UpdateQueryOptions,\n  SubscribeToMoreOptions\n} from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  QueryResult,\n  ObservableQueryFields\n} from '@apollo/react-common';\n\nimport {\n  QueryPreviousData,\n  QueryOptions,\n  QueryCurrentObservable,\n  QueryTuple,\n  QueryLazyOptions\n} from '../types';\nimport { OperationData } from './OperationData';\n\nexport class QueryData<TData, TVariables> extends OperationData {\n  private previousData: QueryPreviousData<TData, TVariables> = {};\n  private currentObservable: QueryCurrentObservable<TData, TVariables> = {};\n  private forceUpdate: any;\n\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n\n  constructor({\n    options,\n    context,\n    forceUpdate\n  }: {\n    options: QueryOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    forceUpdate: any;\n  }) {\n    super(options, context);\n    this.forceUpdate = forceUpdate;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    if (this.isMounted) this.startQuerySubscription();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          } as QueryResult<TData, TVariables>\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<ApolloQueryResult<any>> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n\n    // currentObservable.query is already assigned the registered SSR observable in initializeObservableQuery.\n    const obs = this.currentObservable.query!;\n    const currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n\n      // When the component is done rendering stored query errors, we'll\n      // remove those errors from the `ObservableQuery` query store, so they\n      // aren't re-displayed on subsequent (potentially error free)\n      // requests/responses.\n      setTimeout(() => {\n        this.currentObservable.query &&\n          this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      };\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.forceUpdate();\n  };\n\n  private getExecuteResult = (): QueryResult<TData, TVariables> => {\n    const result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  private getExecuteSsrResult() {\n    const treeRenderingInitiated = this.context && this.context.renderPromises;\n    const ssrDisabled = this.getOptions().ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    let result;\n    if (treeRenderingInitiated) {\n      result =\n        this.context.renderPromises!.addQueryPromise(\n          this,\n          this.getExecuteResult\n        ) || ssrLoading;\n    }\n\n    return result;\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.context &&\n      this.context.renderPromises &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n      metadata: { reactComponent: { displayName } }\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable.query) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previousData.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: null\n      };\n      this.currentObservable.query = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.context && this.context.renderPromises) {\n        this.context.renderPromises.registerSSRObservable(\n          this.currentObservable.query,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: null\n    };\n\n    if (\n      !isEqual(\n        newObservableQueryOptions,\n        this.previousData.observableQueryOptions\n      )\n    ) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .query!.setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  private startQuerySubscription() {\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n\n    const obsQuery = this.currentObservable.query!;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previousData.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          isEqual(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        this.forceUpdate();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previousData.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !isEqual(error, this.previousData.error)\n        ) {\n          this.previousData.error = error;\n          this.forceUpdate();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const lastError = this.currentObservable.query!.getLastError();\n    const lastResult = this.currentObservable.query!.getLastResult();\n    this.currentObservable.query!.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query!, {\n      lastError,\n      lastResult\n    });\n  }\n\n  private getQueryResult(): QueryResult<TData, TVariables> {\n    let result: any = this.observableQueryFields();\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      };\n    } else {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.query!.getCurrentResult();\n      const { loading, partial, networkStatus, errors } = currentResult;\n      let { error, data } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        const previousData =\n          this.previousData.result && this.previousData.result.data;\n        result.data =\n          previousData && data\n            ? {\n                ...previousData,\n                ...data\n              }\n            : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query!.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.query!.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          !data &&\n          partial &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading =\n      (this.previousData.result && this.previousData.result.loading) || false;\n    this.previousData.result = result;\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    const obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    const { data, loading, error } = obsQuery.getCurrentResult();\n\n    if (!loading) {\n      const { query, variables, onCompleted, onError } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previousData.loading &&\n        isEqual(this.previousOptions.query, query) &&\n        isEqual(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n\n  private obsRefetch = (variables?: TVariables) =>\n    this.currentObservable.query!.refetch(variables);\n\n  private obsFetchMore = <K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable.query!.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable.query!.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable.query!.subscribeToMore(options);\n\n  private observableQueryFields() {\n    const observable = this.currentObservable.query!;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport {\n  getApolloContext,\n  OperationVariables,\n  QueryResult\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions, QueryOptions, QueryTuple } from '../types';\nimport { QueryData } from '../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryOptions<TData, TVariables>,\n      context,\n      forceUpdate\n    });\n  }\n\n  const queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: { ...updatedOptions, onError: undefined, onCompleted: undefined },\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data\n  ]);\n\n  useEffect(() => {\n    return () => queryData.cleanup();\n  }, []);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal as isEqual } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { ApolloError } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  OperationVariables,\n  ExecutionResult,\n  MutationFunctionOptions,\n  MutationResult\n} from '@apollo/react-common';\n\nimport { MutationOptions, MutationTuple } from '../types';\nimport { OperationData } from './OperationData';\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData {\n  private mostRecentMutationId: number;\n  private result: MutationResult<TData>;\n  private previousResult?: MutationResult<TData>;\n  private setResult: (result: MutationResult<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    result: MutationResult<TData>;\n    setResult: (result: MutationResult<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResult<TData>) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: ExecutionResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        this.onMutationError(error, mutationId);\n        if (!this.getOptions().onError) throw error;\n      });\n  };\n\n  private mutate(\n    mutationFunctionOptions: MutationFunctionOptions<TData, TVariables>\n  ) {\n    const {\n      mutation,\n      variables,\n      optimisticResponse,\n      update,\n      context: mutationContext = {},\n      awaitRefetchQueries = false,\n      fetchPolicy\n    } = this.getOptions();\n    const mutateOptions = { ...mutationFunctionOptions };\n\n    const mutateVariables = Object.assign(\n      {},\n      variables,\n      mutateOptions.variables\n    );\n    delete mutateOptions.variables;\n\n    return this.refreshClient().client.mutate({\n      mutation,\n      optimisticResponse,\n      refetchQueries:\n        mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries,\n      update,\n      context: mutationContext,\n      fetchPolicy,\n      variables: mutateVariables,\n      ...mutateOptions\n    });\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: ExecutionResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    const { onError } = this.getOptions();\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResult<TData>) {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !isEqual(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  }\n}\n","import { equal as isEqual } from '@wry/equality';\nimport { ApolloContextValue, SubscriptionResult } from '@apollo/react-common';\n\nimport { OperationData } from './OperationData';\nimport { SubscriptionCurrentObservable, SubscriptionOptions } from '../types';\n\nexport class SubscriptionData<\n  TData = any,\n  TVariables = any\n> extends OperationData<SubscriptionOptions<TData, TVariables>> {\n  private setResult: any;\n  private currentObservable: SubscriptionCurrentObservable = {};\n\n  constructor({\n    options,\n    context,\n    setResult\n  }: {\n    options: SubscriptionOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    setResult: any;\n  }) {\n    super(options, context);\n    this.setResult = setResult;\n    this.initialize(options);\n  }\n\n  public execute(result: SubscriptionResult<TData>) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    let currentResult = result;\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    let { shouldResubscribe } = this.getOptions();\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (\n      shouldResubscribe !== false &&\n      this.previousOptions &&\n      Object.keys(this.previousOptions).length > 0 &&\n      (this.previousOptions.subscription !== this.getOptions().subscription ||\n        !isEqual(this.previousOptions.variables, this.getOptions().variables) ||\n        this.previousOptions.skip !== this.getOptions().skip)\n    ) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n\n    this.previousOptions = this.getOptions();\n    return { ...currentResult, variables: this.getOptions().variables };\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n  }\n\n  public cleanup() {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  }\n\n  private initialize(options: SubscriptionOptions<TData, TVariables>) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  }\n\n  private startSubscription() {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query!.subscribe(\n      {\n        next: this.updateCurrentData.bind(this),\n        error: this.updateError.bind(this),\n        complete: this.completeSubscription.bind(this)\n      }\n    );\n  }\n\n  private getLoadingResult() {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  }\n\n  private updateResult(result: SubscriptionResult) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  }\n\n  private updateCurrentData(result: SubscriptionResult<TData>) {\n    const { onSubscriptionData } = this.getOptions();\n\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  }\n\n  private updateError(error: any) {\n    this.updateResult({\n      error,\n      loading: false\n    });\n  }\n\n  private completeSubscription() {\n    const { onSubscriptionComplete } = this.getOptions();\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  }\n\n  private endSubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n}\n","import { ObservableQuery } from 'apollo-client';\nimport { QueryOptions } from '../types';\nimport { DocumentNode } from 'graphql';\nimport { QueryData } from '../data/QueryData';\n\ntype QueryInfo = {\n  seen: boolean;\n  observable: ObservableQuery<any, any> | null;\n};\n\nfunction makeDefaultQueryInfo(): QueryInfo {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nexport class RenderPromises {\n  // Map from Query component instances to pending fetchData promises.\n  private queryPromises = new Map<QueryOptions<any, any>, Promise<any>>();\n\n  // Two-layered map from (query document, stringified variables) to QueryInfo\n  // objects. These QueryInfo objects are intended to survive through the whole\n  // getMarkupFromTree process, whereas specific Query instances do not survive\n  // beyond a single call to renderToStaticMarkup.\n  private queryInfoTrie = new Map<DocumentNode, Map<string, QueryInfo>>();\n\n  // Registers the server side rendered observable.\n  public registerSSRObservable<TData, TVariables>(\n    observable: ObservableQuery<any, TVariables>,\n    props: QueryOptions<TData, TVariables>\n  ) {\n    this.lookupQueryInfo(props).observable = observable;\n  }\n\n  // Get's the cached observable that matches the SSR Query instances query and variables.\n  public getSSRObservable<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ) {\n    return this.lookupQueryInfo(props).observable;\n  }\n\n  public addQueryPromise<TData, TVariables>(\n    queryInstance: QueryData<TData, TVariables>,\n    finish: () => React.ReactNode\n  ): React.ReactNode {\n    const info = this.lookupQueryInfo(queryInstance.getOptions());\n    if (!info.seen) {\n      this.queryPromises.set(\n        queryInstance.getOptions(),\n        new Promise(resolve => {\n          resolve(queryInstance.fetchData());\n        })\n      );\n      // Render null to abandon this subtree for this rendering, so that we\n      // can wait for the data to arrive.\n      return null;\n    }\n    return finish();\n  }\n\n  public hasPromises() {\n    return this.queryPromises.size > 0;\n  }\n\n  public consumeAndAwaitPromises() {\n    const promises: Promise<any>[] = [];\n    this.queryPromises.forEach((promise, queryInstance) => {\n      // Make sure we never try to call fetchData for this query document and\n      // these variables again. Since the queryInstance objects change with\n      // every rendering, deduplicating them by query and variables is the\n      // best we can do. If a different Query component happens to have the\n      // same query document and variables, it will be immediately rendered\n      // by calling finish() in addQueryPromise, which could result in the\n      // rendering of an unwanted loading state, but that's not nearly as bad\n      // as getting stuck in an infinite rendering loop because we kept calling\n      // queryInstance.fetchData for the same Query component indefinitely.\n      this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  }\n\n  private lookupQueryInfo<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ): QueryInfo {\n    const { queryInfoTrie } = this;\n    const { query, variables } = props;\n    const varMap = queryInfoTrie.get(query) || new Map<string, QueryInfo>();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    const variablesString = JSON.stringify(variables);\n    const info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  }\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { QueryComponentOptions } from './types';\n\nexport function Query<TData = any, TVariables = OperationVariables>(\n  props: QueryComponentOptions<TData, TVariables>\n) {\n  const { children, query, ...options } = props;\n  const result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\nexport namespace Query {\n  export const propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n}\n","import { OperationVariables, QueryResult } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useMutation } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { MutationComponentOptions } from './types';\n\nexport function Mutation<TData = any, TVariables = OperationVariables>(\n  props: MutationComponentOptions<TData, TVariables>\n) {\n  const [runMutation, result] = useMutation(props.mutation, props);\n  return props.children ? props.children(runMutation, result) : null;\n}\n\nexport namespace Mutation {\n  export const propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n      ),\n      PropTypes.func\n    ]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { MutationHookOptions, MutationTuple } from './types';\nimport { MutationData } from './data/MutationData';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { SubscriptionComponentOptions } from './types';\n\nexport function Subscription<TData = any, TVariables = OperationVariables>(\n  props: SubscriptionComponentOptions<TData, TVariables>\n) {\n  const result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\nexport namespace Subscription {\n  export const propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  };\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\n\nimport { SubscriptionHookOptions } from './types';\nimport { SubscriptionData } from './data/SubscriptionData';\n\nexport function useSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode,\n  options?: SubscriptionHookOptions<TData, TVariables>\n) {\n  const context = useContext(getApolloContext());\n  const updatedOptions = options\n    ? { ...options, subscription }\n    : { subscription };\n  const [result, setResult] = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  });\n\n  const subscriptionDataRef = useRef<SubscriptionData<TData, TVariables>>();\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        setResult\n      });\n    }\n    return subscriptionDataRef.current;\n  }\n\n  const subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n\n  useEffect(() => subscriptionData.afterExecute());\n  useEffect(() => subscriptionData.cleanup.bind(subscriptionData), []);\n\n  return subscriptionData.execute(result);\n}\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { IDocumentDefinition, OperationVariables } from '@apollo/react-common';\n\nexport const defaultMapPropsToOptions = () => ({});\nexport const defaultMapResultToProps: <P>(props: P) => P = props => props;\nexport const defaultMapPropsToSkip = () => false;\n\nexport function getDisplayName<P>(WrappedComponent: React.ComponentType<P>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport function calculateVariablesFromProps<TProps>(\n  operation: IDocumentDefinition,\n  props: TProps\n) {\n  let variables: OperationVariables = {};\n  for (let { variable, type } of operation.variables) {\n    if (!variable.name || !variable.name.value) continue;\n\n    const variableName = variable.name.value;\n    const variableProp = (props as any)[variableName];\n\n    if (typeof variableProp !== 'undefined') {\n      variables[variableName] = variableProp;\n      continue;\n    }\n\n    // Allow optional props\n    if (type.kind !== 'NonNullType') {\n      variables[variableName] = undefined;\n    }\n  }\n  return variables;\n}\n\nexport type RefSetter<TChildProps> = (\n  ref: React.ComponentClass<TChildProps>\n) => void | void;\n\n// base class for hocs to easily manage refs\nexport class GraphQLBase<\n  TProps,\n  TChildProps,\n  TState = any\n  > extends React.Component<TProps, TState> {\n  public withRef: boolean = false;\n  // wrapped instance\n  private wrappedInstance?: React.ComponentClass<TChildProps>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.setWrappedInstance = this.setWrappedInstance.bind(this);\n  }\n\n  getWrappedInstance() {\n    invariant(\n      this.withRef,\n      `To access the wrapped instance, you need to specify ` +\n      `{ withRef: true } in the options`\n    );\n\n    return this.wrappedInstance;\n  }\n\n  setWrappedInstance(ref: React.ComponentClass<TChildProps>) {\n    this.wrappedInstance = ref;\n  }\n}\n","import { DocumentNode } from 'graphql';\nimport { parser, DocumentType } from '@apollo/react-common';\n\nimport { withQuery } from './query-hoc';\nimport { withMutation } from './mutation-hoc';\nimport { withSubscription } from './subscription-hoc';\nimport { OperationOption, DataProps, MutateProps } from './types';\n\nexport function graphql<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = Partial<DataProps<TData, TGraphQLVariables>> &\n    Partial<MutateProps<TData, TGraphQLVariables>>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  switch (parser(document).type) {\n    case DocumentType.Mutation:\n      return withMutation(document, operationOptions);\n    case DocumentType.Subscription:\n      return withSubscription(document, operationOptions);\n    case DocumentType.Query:\n    default:\n      return withQuery(document, operationOptions);\n  }\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport {\n  parser,\n  BaseMutationOptions,\n  MutationFunction,\n  MutationResult\n} from '@apollo/react-common';\nimport { Mutation } from '@apollo/react-components';\n\nimport {\n  defaultMapPropsToOptions,\n  getDisplayName,\n  calculateVariablesFromProps,\n  GraphQLBase\n} from './hoc-utils';\nimport { OperationOption, OptionProps, MutateProps } from './types';\n\nexport function withMutation<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = MutateProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n\n  const {\n    options = defaultMapPropsToOptions,\n    alias = 'Apollo'\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseMutationOptions;\n  if (typeof mapPropsToOptions !== 'function')\n    mapPropsToOptions = () => options as BaseMutationOptions;\n\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<TProps, TChildProps> {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n      render() {\n        let props = this.props as TProps;\n        const opts = mapPropsToOptions(props);\n\n        if (operationOptions.withRef) {\n          this.withRef = true;\n          props = Object.assign({}, props, {\n            ref: this.setWrappedInstance\n          });\n        }\n        if (!opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return (\n          <Mutation ignoreResults {...opts} mutation={document}>\n            {(\n              mutate: MutationFunction<TData, TGraphQLVariables>,\n              { data, ...r }: MutationResult<TData>\n            ) => {\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Mutation component's shape here to replicate that\n              // this matches the query HoC\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'mutate';\n              const resultName = operationOptions.name\n                ? `${name}Result`\n                : 'result';\n              let childProps = ({\n                [name]: mutate,\n                [resultName]: result\n              } as any) as TChildProps;\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: mutate,\n                  [resultName]: result,\n                  ownProps: props\n                };\n                childProps = operationOptions.props(newResult) as any;\n              }\n\n              return <WrappedComponent {...props} {...childProps} />;\n            }}\n          </Mutation>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { parser, BaseQueryOptions } from '@apollo/react-common';\nimport { Subscription } from '@apollo/react-components';\n\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip\n} from './hoc-utils';\nimport { OperationOption, OptionProps, DataProps } from './types';\n\nexport function withSubscription<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = DataProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = 'Apollo',\n    shouldResubscribe\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== 'function')\n    mapPropsToOptions = () => options as BaseQueryOptions;\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== 'function') mapPropsToSkip = () => skip as any;\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<\n      TProps,\n      TChildProps,\n      { resubscribe: boolean }\n    > {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n      constructor(props: TProps) {\n        super(props);\n        this.state = { resubscribe: false };\n      }\n\n      componentDidUpate(prevProps: TProps) {\n        if (shouldResubscribe) {\n          this.setState({\n            resubscribe: shouldResubscribe(prevProps, this.props)\n          });\n        }\n      }\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts = shouldSkip\n          ? Object.create(null)\n          : mapPropsToOptions(props);\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n        return (\n          <Subscription\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            subscription={document}\n            shouldResubscribe={this.state.resubscribe}\n          >\n            {({ data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance\n                });\n              }\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...props as TProps}\n                    {...{} as TChildProps}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'data';\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: result,\n                  ownProps: props as TProps\n                };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...props as TProps}\n                  {...childProps as TChildProps}\n                />\n              );\n            }}\n          </Subscription>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { parser, BaseQueryOptions } from '@apollo/react-common';\nimport { Query } from '@apollo/react-components';\n\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip\n} from './hoc-utils';\nimport { OperationOption, OptionProps, DataProps } from './types';\n\nexport function withQuery<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = DataProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = 'Apollo'\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== 'function') {\n    mapPropsToOptions = () => options as BaseQueryOptions;\n  }\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== 'function') {\n    mapPropsToSkip = () => skip as any;\n  }\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<TProps, TChildProps> {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts = shouldSkip\n          ? Object.create(null)\n          : { ...mapPropsToOptions(props) };\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return (\n          <Query\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            query={document}\n          >\n            {({ client: _, data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance\n                });\n              }\n\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...props as TProps}\n                    {...{} as TChildProps}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'data';\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: result,\n                  ownProps: props as TProps\n                };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...props as TProps}\n                  {...childProps as TChildProps}\n                />\n              );\n            }}\n          </Query>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}