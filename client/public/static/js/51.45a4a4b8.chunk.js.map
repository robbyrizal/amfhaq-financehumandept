{"version":3,"sources":["views/HumanResource/queries/queries.js","views/HumanResource/Karyawan/EditDataKaryawan.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["getKaryawansQuery","gql","getKaryawanQuery","addKaryawanMutation","updateKaryawanMutation","hapusKaryawanMutation","getDivisisQuery","EditDataKaryawan","props","state","nama","tanggal_lahir","jenis_kelamin","agama","tempat_lahir","alamat","no_kontak","email","jabatan","divisi_id","e","karyawan","this","data","namaF","tanggal_lahirF","jenis_kelaminF","agamaF","tempat_lahirF","alamatF","no_kontakF","emailF","jabatanF","divisi_idF","divisi","id","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","variables","match","params","refetchQueries","query","history","push","alert","loading","divisis","map","key","value","onSubmit","submitForm","htmlFor","type","defaultValue","placeholder","onChange","setState","target","required","displayDivisi","className","to","label","color","displayKaryawan","onClick","Component","compose","withRouter","graphql","options","name","propTypes","tag","tagPropType","inverse","PropTypes","bool","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","CardHeader"],"mappings":"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","file":"static/js/51.45a4a4b8.chunk.js","sourcesContent":["import {gql} from 'apollo-boost';\r\n\r\nconst getKaryawansQuery = gql`\r\n{\r\n\tkaryawans {\r\n\t\tnama\r\n\t\ttanggal_lahir\r\n\t\tjenis_kelamin\r\n\t\tagama\r\n\t\ttempat_lahir\r\n\t\talamat\r\n\t\tno_kontak\r\n\t\temail\r\n\t\tjabatan\r\n\t\tdivisi{\r\n\t\t\tnama\r\n\t\t\tid\r\n\t\t}\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\n\r\nconst getKaryawanQuery = gql`\r\n\tquery($id: ID){\r\n\t\tkaryawan(id: $id) {\r\n\t\t\tnama\r\n\t\t\ttanggal_lahir\r\n\t\t\tjenis_kelamin\r\n\t\t\tagama\r\n\t\t\ttempat_lahir\r\n\t\t\talamat\r\n\t\t\tno_kontak\r\n\t\t\temail\r\n\t\t\tjabatan\r\n\t\t\tdivisi{\r\n\t\t\t\tnama\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\n\r\n\r\nconst addKaryawanMutation = gql`\r\n\tmutation($nama:String!, $tanggal_lahir:String!, $jenis_kelamin:String!,\r\n\t\t$agama:String!, $tempat_lahir:String!, $alamat:String!,\r\n\t\t$no_kontak:String!, $email:String!, $jabatan:String!,\r\n\t\t$divisi_id:String!){\r\n\t\taddKaryawan(nama: $nama,\r\n\t\ttanggal_lahir: $tanggal_lahir,\r\n\t\tjenis_kelamin: $jenis_kelamin,\r\n\t\tagama: $agama,\r\n\t\ttempat_lahir: $tempat_lahir,\r\n\t\talamat: $alamat,\r\n\t\tno_kontak: $no_kontak,\r\n\t\temail: $email,\r\n\t\tjabatan: $jabatan,\r\n\t\tdivisi_id: $divisi_id,){\r\n\t\t\tnama\r\n\t\t\ttanggal_lahir\r\n\t\t\tjenis_kelamin\r\n\t\t\tagama\r\n\t\t\ttempat_lahir\r\n\t\t\talamat\r\n\t\t\tno_kontak\r\n\t\t\temail\r\n\t\t\tjabatan\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\nconst updateKaryawanMutation = gql`\r\n\tmutation($id:ID!, $nama:String!, $tanggal_lahir:String!, $jenis_kelamin:String!,\r\n\t\t$agama:String!, $tempat_lahir:String!, $alamat:String!,\r\n\t\t$no_kontak:String!, $email:String!, $jabatan:String!,\r\n\t\t$divisi_id:String!){\r\n\t\tupdateKaryawan(id:$id,\r\n\t\tnama: $nama,\r\n\t\ttanggal_lahir: $tanggal_lahir,\r\n\t\tjenis_kelamin: $jenis_kelamin,\r\n\t\tagama: $agama,\r\n\t\ttempat_lahir: $tempat_lahir,\r\n\t\talamat: $alamat,\r\n\t\tno_kontak: $no_kontak,\r\n\t\temail: $email,\r\n\t\tjabatan: $jabatan,\r\n\t\tdivisi_id: $divisi_id,){\r\n\t\t\tnama\r\n\t\t\ttanggal_lahir\r\n\t\t\tjenis_kelamin\r\n\t\t\tagama\r\n\t\t\ttempat_lahir\r\n\t\t\talamat\r\n\t\t\tno_kontak\r\n\t\t\temail\r\n\t\t\tjabatan\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\nconst hapusKaryawanMutation = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusKaryawan(id: $id){\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n//----------------------------------------------------------------------------//\r\n\r\nconst getDivisisQuery = gql`\r\n{\r\n\tdivisis {\r\n\t\tnama\r\n\t\tid\r\n\t}\r\n}\r\n`\r\nexport {\r\n\tgetKaryawansQuery,\r\n\tgetKaryawanQuery,\r\n\taddKaryawanMutation,\r\n\tupdateKaryawanMutation,\r\n\thapusKaryawanMutation,\r\n\tgetDivisisQuery,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {graphql} from 'react-apollo';\r\nimport * as compose from 'lodash.flowright';\r\nimport {getKaryawansQuery,getKaryawanQuery,getDivisisQuery,updateKaryawanMutation} from '../queries/queries';\r\n\r\nimport {\r\n\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Button,\r\n  Row,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form\r\n} from 'reactstrap';\r\n\r\n\r\nclass EditDataKaryawan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nama: '',\r\n    \ttanggal_lahir: '',\r\n      jenis_kelamin: '',\r\n      agama: '',\r\n    \ttempat_lahir: '',\r\n    \talamat: '',\r\n    \tno_kontak: '',\r\n    \temail: '',\r\n      jabatan: '',\r\n      divisi_id: '',\r\n    };\r\n  }\r\n\r\n  submitForm(e){\r\n    const {karyawan} = this.props.data;\r\n    var namaF= '';\r\n    var\ttanggal_lahirF= '';\r\n    var jenis_kelaminF= '';\r\n    var agamaF= '';\r\n    var\ttempat_lahirF= '';\r\n    var\talamatF= '';\r\n    var\tno_kontakF= '';\r\n    var\temailF= '';\r\n    var jabatanF= '';\r\n    var divisi_idF= '';\r\n    \r\n\r\n    if (this.state.nama === ''){\r\n      namaF = karyawan.nama\r\n    } else {\r\n      namaF = this.state.nama\r\n    }\r\n    if (this.state.jenis_kelamin === ''){\r\n      jenis_kelaminF = karyawan.jenis_kelamin\r\n    } else {\r\n      jenis_kelaminF = this.state.jenis_kelamin\r\n    }\r\n    if (this.state.tanggal_lahir === ''){\r\n      tanggal_lahirF = karyawan.tanggal_lahir\r\n    } else {\r\n      tanggal_lahirF = this.state.tanggal_lahir \r\n    }\r\n    if (this.state.agama === ''){\r\n      agamaF = karyawan.agama\r\n    } else {\r\n      agamaF = this.state.agama\r\n    }\r\n    if (this.state.tempat_lahir === ''){\r\n      tempat_lahirF = karyawan.tempat_lahir\r\n    } else {\r\n      tempat_lahirF = this.state.tempat_lahir\r\n    }\r\n    if (this.state.alamat === ''){\r\n      alamatF = karyawan.alamat\r\n    } else {\r\n      alamatF = this.state.alamat\r\n    }\r\n    if (this.state.no_kontak === ''){\r\n      no_kontakF = karyawan.no_kontak\r\n    } else {\r\n      no_kontakF = this.state.no_kontak\r\n    }\r\n    if (this.state.email === ''){\r\n      emailF = karyawan.email\r\n    } else {\r\n      emailF = this.state.email\r\n    }\r\n    if (this.state.jabatan === ''){\r\n      jabatanF = karyawan.jabatan\r\n    } else {\r\n      jabatanF = this.state.jabatan\r\n    }\r\n    if (this.state.divisi_id === ''){\r\n      divisi_idF = karyawan.divisi.id\r\n    } else {\r\n      divisi_idF = this.state.divisi_id\r\n    }\r\n\r\n    let lastAtPos = emailF.lastIndexOf('@');\r\n    let lastDotPos = emailF.lastIndexOf('.');\r\n\r\n    if (!(lastAtPos < lastDotPos && lastAtPos > 0 && emailF.indexOf('@@') == -1 && lastDotPos > 2 && (emailF.length - lastDotPos) > 2)) {\r\n      alert(\"Email is not valid\")\r\n    } else {\r\n      this.props.updateKaryawanMutation({\r\n        variables:{\r\n          id:this.props.match.params.id,\r\n          nama: namaF,\r\n          tanggal_lahir:tanggal_lahirF,\r\n          jenis_kelamin: jenis_kelaminF,\r\n          agama: agamaF,\r\n          tempat_lahir: tempat_lahirF,\r\n          alamat: alamatF,\r\n          no_kontak: no_kontakF,\r\n          email: emailF,\r\n          jabatan: jabatanF,\r\n          divisi_id: divisi_idF,\r\n        },\r\n        refetchQueries:[{query:getKaryawansQuery}],\r\n      });\r\n      this.props.history.push(\"/karyawan/datakaryawan\");\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  displayDivisi(){\r\n    var data = this.props.getDivisisQuery;\r\n    if(data.loading){\r\n      return (<div>Loading Data Divisi...</div>);\r\n    } else {\r\n      return data.divisis.map(divisi => {\r\n        return(\r\n          <option key={divisi.id} value={divisi.id}> {divisi.nama} </option>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  displayKaryawan(){\r\n    const {karyawan} = this.props.data;\r\n   \r\n    if(karyawan){\r\n       return(\r\n         <Form onSubmit={(e) => {this.submitForm(e)}}>\r\n        <FormGroup>\r\n        <Label htmlFor=\"name\">Nama Lengkap</Label>\r\n        <Input type=\"text\" defaultValue={karyawan.nama} id=\"nama_karyawan\" placeholder=\"Nama Lengkap\" onChange={(e) =>this.setState({nama:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Tanggal Lahir</Label>\r\n        <Input type=\"date\" defaultValue={karyawan.tanggal_lahir}  id=\"tanggal_lahir\" onChange={(e) =>this.setState({tanggal_lahir:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Tempat Lahir</Label>\r\n        <Input type=\"text\" defaultValue={karyawan.tempat_lahir}  id=\"tempat_lahir\" placeholder=\"Tempat Lahir\"  onChange={(e) =>this.setState({tempat_lahir:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Jenis Kelamin</Label>\r\n        <Input type=\"select\" defaultValue={karyawan.jenis_kelamin}  id=\"jenis_kelamin\" onChange={(e) =>this.setState({jenis_kelamin:e.target.value})} required >\r\n          <option value=\"\">Pilih Jenis Kelamin</option>\r\n          <option value=\"Pria\">Pria</option>\r\n          <option value=\"Wanita\">Wanita</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Agama</Label>\r\n        <Input type=\"select\" defaultValue={karyawan.agama}  id=\"agama\" onChange={(e) =>this.setState({agama:e.target.value})} required >\r\n          <option value=\"\">Pilih Agama</option>\r\n          <option value=\"Islam\">Islam</option>\r\n          <option value=\"Budha\">Budha</option>\r\n          <option value=\"Hindu\">Hindu</option>\r\n          <option value=\"Katolik\">Katolik</option>\r\n          <option value=\"Kristen\">Kristen</option>\r\n        </Input>\r\n      </FormGroup>\r\n      \r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Alamat</Label>\r\n        <Input type=\"text\" defaultValue={karyawan.alamat}  id=\"alamat\" placeholder=\"Alamat\" onChange={(e) =>this.setState({alamat:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">No Kontak</Label>\r\n        <Input type=\"text\" defaultValue={karyawan.no_kontak}  id=\"no_kontak\" placeholder=\"No Kontak\" onChange={(e) =>this.setState({no_kontak:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Email</Label>\r\n        <Input type=\"email\" defaultValue={karyawan.email}  id=\"email\" placeholder=\"Alamat Email\"  onChange={(e) =>this.setState({email:e.target.value})} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Jabatan</Label>\r\n        <Input type=\"select\" defaultValue={karyawan.jabatan}  id=\"jabatan\" onChange={(e) =>this.setState({jabatan:e.target.value})} required >\r\n          <option value=\"\">Pilih Jabatan</option>\r\n          <option value=\"Manajer\">Manajer</option>\r\n          <option value=\"Staff\">Staff</option>\r\n          <option value=\"Teknisi\">Teknisi</option>\r\n          <option value=\"Akuntan\">Akuntan</option>\r\n          <option value=\"Karyawan Tetap\">Karyawan Tetap</option>\r\n          <option value=\"Karyawan Kontrak\">Karyawan Kontrak</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label htmlFor=\"name\">Divisi</Label>\r\n        <Input type=\"select\" defaultValue={karyawan.divisi.id}  id=\"divisi\" onChange={(e) =>this.setState({divisi_id:e.target.value})} required >\r\n        <option value=\"\">Pilih Divisi</option>\r\n        {this.displayDivisi()}\r\n        </Input>\r\n      </FormGroup>\r\n             \r\n      </Form>\r\n       )\r\n      }\r\n    };\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                Tambah Karyawan Baru\r\n                <Link to=\"/karyawan/datakaryawan\" className={'float-right mb-0'}>\r\n                  <Button label color=\"danger\">\r\n                      Batal\r\n                  </Button>\r\n                </Link>\r\n              </CardHeader>\r\n              <CardBody>\r\n              {this.displayKaryawan()}\r\n              \r\n                  <Button type=\"submit\" color=\"primary\" className={'float-right mb-0'} onClick={(e) => {this.submitForm(e)}} >Submit</Button>\r\n                 \r\n                \r\n                \r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withRouter,\r\n  graphql(getKaryawanQuery, {\r\n    options:(props) => {\r\n      return{\r\n        variables:{\r\n          id: props.match.params.id\r\n        }\r\n      }\r\n    }\r\n  }),\r\n  graphql(getKaryawansQuery, {name:\"getKaryawansQuery\"}),\r\n  graphql(updateKaryawanMutation, {name:\"updateKaryawanMutation\"}),\r\n  graphql(getDivisisQuery, {name:\"getDivisisQuery\"}),\r\n)(EditDataKaryawan);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}